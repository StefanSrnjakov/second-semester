UNIVERZA V LJUBLJANI EKONOMSKA FAKULTETA D I P L O M S K O D E L O
ANALIZE IN POROČILA OLAP KOT DEL SISTEMA ZA PODPORO ODLOČANJU
Ljubljana, september 2002 MATJAŽ BABIČ

IZJAVA
Študent MATJAŽ BABIČ izjavljam, da sem avtor tega diplomskega dela, ki sem ga napisal pod mentorstvom DR. JURIJA JAKLIČA in dovolim objavo diplomskega dela na fakultetnih spletnih straneh.
V Ljubljani, dne____________________ Podpis: ______________________________

KAZALO
1. UVOD .......................................................................................................................................................... 1 2. SISTEMI ZA PODPORO ODLOČANJU................................................................................................ 2 2.1 OPREDELITEV SISTEMOV ZA PODPORO ODLOČANJU ..................................................................................... 2 2.2 RAZVOJ SISTEMOV ZA PODPORO ODLOČANJU............................................................................................... 4 2.3 PREDNOSTI IN KORISTI SPO ......................................................................................................................... 5 2.4 SPO V PRIHODNOSTI .................................................................................................................................... 6 3. OLAP TEHNOLOGIJA ............................................................................................................................ 8 3.1 UVOD V TEHNOLOGIJO OLAP ..................................................................................................................... 8 3.2 LASTNOSTI SISTEMA OLAP V PRIMERJAVI S TRANSAKCIJSKIM SISTEMOM................................................... 8 3.3 KRATKA RAZLAGA OSNOVNIH GRADNIKOV OLAP TEHNOLOGIJE.............................................................. 11
3.3.1 Meritve, dimenzije in kocke ............................................................................................................... 11 3.3.2 Arhitektura sistema OLAP................................................................................................................. 13 3.3.3 Zajemanje podatkov in polnjenje OLAP kock.................................................................................... 14 3.3.4 Podatkovna struktura večdimenzionalnih kock ................................................................................. 16 3.3.5 Shranjevanje večdimenzionalnih podatkov....................................................................................... 17
3.4 UČINKOVITA IZDELAVA SISTEMA OLAP.................................................................................................... 19 4. IZDELAVA SISTEMA OLAP KOT DEL SISTEMA ZA PODPORO ODLOČANJU..................... 21
4.1. UGOTAVLJANJE POTREB ........................................................................................................................... 22 4.2. NAČRTOVANJE SISTEMA............................................................................................................................ 22
4.2.1 Definicija analiz in poročil ................................................................................................................ 22 4.2.2. Razvojno okolje ................................................................................................................................ 24 4.2.3. Izbira odjemalca............................................................................................................................... 25 4.2.4. Postopki in specifikacije razvoja ...................................................................................................... 28
4.3 IZDELAVA SISTEMA .................................................................................................................................... 30
4.3.1. Zajemanje podatkov.......................................................................................................................... 30 4.3.2. Izdelava dimenzij .............................................................................................................................. 31 4.3.3. Izdelava tabel dejstev........................................................................................................................ 32 4.3.4. Izdelava kock .................................................................................................................................... 33 4.3.5. Izdelava poročil v odjemalcu............................................................................................................ 35 4.3.6. Testiranje ustreznosti za distribucijo................................................................................................ 36
4.4 IMPLEMENTACIJA ....................................................................................................................................... 37
4.4.1 Priprava dokumentacije sistema........................................................................................................ 37 4.4.2 Testiranje nameščenega sistema........................................................................................................ 37 4.4.3 Uvajanje uporabnikov ....................................................................................................................... 38
4.5. VZDRŽEVANJE SISTEMA ............................................................................................................................ 38 5. PREDNOSTI, SLABOSTI IN TEŽAVE PRI IZDELAVI OLAP SISTEMA..................................... 39
5.1. PREDNOSTI................................................................................................................................................ 39 5.2. SLABOSTI IN TEŽČEK SLOVENSKIH PREVODOV TUJIH IZRAZOV 1. UVOD


Tržno gospodarstvo ustvarja vse bolj konkurenčno poslovno okolje, kjer je prostor le za najboljše. Za tiste, ki vlečejo prave poteze, za tiste, ki sprejemajo prave odločitve. Pravilno odločanje pa je mogoče samo, če so na voljo točne, pravočasne in transparentne informacije.
Živimo v svetu, ki je preobremenjen s podatki (angl. information overload). Podjetja imajo ogromne baze podatkov, ki vsebujejo vse vrste podatkov, povezane s poslovanjem podjetja.
Lahko si predstavljamo, koliko različnih šifer, številk, kontov in drugega vsebuje taka relacijska baza podatkov. Problem je seveda v tem, kako obvladovati vse te podatke oz. na kakšen način pridobiti koristne informacije, ki jih vodstvo, management, analitiki in drugi potrebujejo za učinkovito odločanje. Ključ razumevanja poslovanja podjetja je boljša analiza podatkov o odjemalcih, dobaviteljih, zaposlenih, procesih in drugo. Brez poznavanja prednosti in slabosti, podjetje ne more biti konkurenčno (Bidgoli, 1997, str. 283).
V poslovnih sistemih zbiramo velike količine podatkov, pa vendar imamo redne težave s poročili. Problemi nastopijo takoj, ko delamo zahtevnejše analize, kjer na primer želimo dobiti primerjave vsot ali povprečij preko več let, rasti prodaje glede na mesece in kategorije izdelkov in podobno. Takšne analize so praviloma zamudne, večinoma zahtevajo tudi delno predpripravo podatkov. Obenem marsikdaj motijo poslovni proces, saj je priprava podatkov precej zahtevna. Dober sistem za podporo odločanju olajša strokovnjakom in vodilnim izvajanje analitičnih nalog na njihovih poslovnih področjih in jim omogoča interpretacijo informacij v njim prilagojeni obliki. Ob vsakem trenutku omogoča izdelavo poročil, katerih kriterije in predstavitev lahko uporabniki hitro prilagodijo glede na poslovne potrebe brez dragega poseganja informacijskih strokovnjakov.
Vse to bo predmet obravnave v moji diplomski nalogi. Cilj moje naloge je torej spoznati sistem za podporo odločanju (SPO) in tehnologijo, ki za tem stoji. Skušal bom ugotoviti prednosti in koristi, ki jih ti sistemi prinašajo. Zanimivo poglavje je tudi o smernicah razvoja SPO za naslednjih deset let.
Bolj podrobno se bom lotil tudi tehnologije za sprotno analitično obdelavo podatkov OLAP (angl. On-Line Analytical Processing), ki omogoča analitikom in odločevalcem hiter in zanesljiv vpogled na podatke z različnih zornih kotov. Naredil bom teoretično primerjavo med transakcijskim sistemom in sistemom OLAP. Predstavil bom bistvene elemente te tehnologije in skušal ugotoviti, kateri faktorji ključno vplivajo na uspešnost izdelave sistema
OLAP.
V praktičnem delu moje diplomske naloge bom skušal rešiti problem zaposlenih, ki si vsak dan zastavijo veliko število poslovno zanimivih vprašanj. Odgovore hočejo takoj, saj nočejo prekiniti miselnega procesa. Hkrati pa hočejo samostojno raziskovati po podatkih (interaktiven sistem) in nočejo imeti papirnatih poročil. To rešuje tehnologija OLAP, vendar vprašanje je, kako izdelati sistem OLAP analiz in poročil, ki bo enostaven za izvedbo, preprost za uporabo in vsebinsko koristen. Ravno to bom poskusil rešiti s prikazom izdelave praktičnega primera na osnovi realnega projekta, ki smo ga izvedli pod okriljem informacijskega podjetja. Obravnaval bom vse faze razvoja takega sistema in predstavil končni produkt. Na koncu bom še opisal prednosti in slabosti sistema, ki so se v praksi pokazale.

2. SISTEMI ZA PODPORO ODLOČANJU
2.1 Opredelitev sistemov za podporo odločanju
Potrebe nekaterih aplikacij so jasne. Na primer, komercialni sistem omogoča spremljanje materialnega poslovanja, prodajo, nabavo, skladiščnega poslovanja in drugo. Kadrovski sistem je namenjen zbiranju in obdelavi vseh vrst podatkov o zaposlenih (lastnosti, znanje, družinski člani in podobno). Kaj imajo te aplikacije skupnega? Vse so taktične aplikacije, ki podpirajo določen poslovni proces v podjetju in omogočajo učinkovito zbiranje transakcijskih podatkov. So nujne za normalno poslovanje podjetja, saj omogočajo učinkovito opravljanje vsakodnevna opravila na operativnem nivoju. Vendar niso primerne za reševanje naslednjega vprašanja: »Kako lahko povečamo učinkovitost poslovanja?« Za iskanje odgovorov na zastavljeno vprašanje potrebujemo strateške aplikacije, ki omogočajo prikazovanje podatkov z višje perspektive. Zbrati morajo potrebne podatke o poslovanju, jih analitsko obdelati in prikazati v taki obliki, ki so razumljive vsem uporabnikom. Take aplikacije sestavljajo t.i. sistem za podporo odločanju (SPO) (Peterson, Pinkelman, 2000).
Sistem za podporo odločanju je računalniški informacijski sistem, sestavljen iz množice strojne opreme, programske opreme in ljudi. Izdelan je za pomoč vsakemu zaposlenemu, ki sodeluje v procesu odločanja na vseh organizacijskih nivojih. Poudarek je tako na strukturiranih kot na nestrukturiranih odločitvah (Bidgoli, 1997, str. 282).
Strukturirane odločitve so tiste odločitve, ki vsebujejo v naprej definirane izmenične akcije.
Informacijske potrebe so točno določene in rezultat je jasen. Nestrukturirane odločitve niso predvidljive in predhodno ne moremo določiti, katere informacije potrebujemo. Značilne so za najvišje vodstvo, kjer se odloča o zapletenih strategijah (Bidgoli, 1997, str. 284).
Namen SPO je podpora pri procesu odločanja tako na operativnem, kot na taktičnem in strateškem nivoju. Uporabniki so zaposleni v najvišjem, sprednjem in operativnem managemantu. To prikazuje tudi slika 1.

Slika1: Vodstvene ravni v podjetju Vir: Koletnik, Kovač, Rozman, 1993, str. 22.
SPO vključuje notranje in zunanje podatke. Notranji vir podatkov predstavlja transakcijski sistem, ki generira podatke o poslovanju podjetja. Zunanji podatki pa so podatki raznih finančnih in državnih ustanov, ki na primer objavljajo vrednosti obrestnih merah, bruto domačega proizvoda, populacijskih trendih in drugo. SPO običajno vsebujejo poizvedovalni jezik, zmožnosti statističnega obdelovanja in prikazovanja v obliki preglednic ter grafikonov za lažje primerjanje in ovrednotenje omenjenih podatkov. Boljši SPO podpirajo tudi izdelovanje modelov s katerimi proučujemo, kako določena spremenljivka vpliva na končno stanje (Shelly, Cashman, Rosenblatt, 1998, str 1.10).
Informacijske sisteme delimo na šest kategorij: transakcijski sistemi, managerski informacijski sistemi (MIS), sistemi za podporo odločanju (SPO), direktorski informacijski sistemi (DIS), ekspertni sistemi in pisarniški sistemi (Shelly, Cashman, Rosenblatt, 1998, str 1.10). Z današnjimi naprednimi aplikacijami je včasih izredno težko klasificirati sistem v eno od klasičnih kategorij. Veliko sodobnih sistemov kombinira oz. vsebuje operativno moč, zmožnosti MIS in SPO. Uporabniki vse bolj zahtevajo aplikacije, ki omogočajo lažje in učinkoviteje opravljanje njihovega dela. Zato so sistemski razvijalci prisiljeni izdelovati take aplikacije in sisteme, ki združujejo vse več različnih lastnosti.
Opažam, da v praksi velikokrat prihaja do nasprotij pri poimenovanju in opredeljevanju sistemov. Izpostavil bi en primer, ki se pojavlja v našem prostoru. Aktualno je izdelovanje in trženje t.i. »Direktorskih informacijskih sistemov« (DIS). Po definiciji je DIS računalniški informacijski sistem, ki vodstvu omogoča dostop do notranjih in zunanjih podatkov na osnovi »ad-hoc« poročil in zmožnostjo vrtanja v globino. Nanaša se na ključne faktorje uspeha za vodenje trenutnega in bodočega poslovanja (Bidgoli, 1997, str. 292). Pojavljajo se podjetja, ki ponujajo in tržijo sisteme, ki generirajo poročila in razne analize za vse nivoje odločanja. V tem primeru so uporabniki ne samo vodstvo kot po definiciji, ampak tudi komercialisti, prodajni vodje in drugi. Poraja se vprašanje, ali je tako poimenovanje upravičeno, ali pa gre zgolj za trženjski prijem, saj je DIS zelo posrečeno ime in ima veliko tržno moč.

2.2 Razvoj sistemov za podporo odločanju
Od leta 1990 so se na trgu uveljavile štiri ključne tehnologije za izdelovanje sistemov za podporo odločanju (SPO). Prva tehnologija je skladiščenje podatkov, naslednji dve, ki sta sledili in sta nadgradili (dopolnili) prvo, sta OLAP in »data mining« (rudarjenje). Četrta nova tehnologija pa je spletna tehnologija, ki je doživela veliko zanimanje v teh letih in še večji odmev bo imela v prihodnosti. Vse te tehnologije ostajajo vroča tema v podjetjih in akademskih publikacijah (Shim, 2002, str. 114).
Skladišče podatkov je vsebinsko orientirana, integrirana in dolgotrajna zbirka zgodovinskih podatkov. Osnove izgradnje skladišča podatkov so izhajale iz potreb izboljšanja tehnologije baz podatkov. Leta 1970 je Codd predlagal relacijski model baze podatkov in ta koncept je imel velik vpliv tako na transakcijske sisteme kot na SPO. Ravno tako so Coddove specifikacije o standardih za OLAP imele velik vpliv na izdelovanje SPO. V zgodnjih 90 letih je obstajalo le nekaj skladišč podatkov. Delo Inmona, Devlina in Kimballa (Shim, 2002, str.
115) je podprlo in pospešilo koncept (rešitev) le-teh za integriranje podatkov iz različnih operativnih baz za analitične namene. Podjetja so se vse bolj odločala za izgradnjo svojega skladišča podatkov, vendar neprestano so se pojavljala vprašanja o uporabi relacijske ali večdimenzionalne podatkovne tehnologije za sprotno analitično obdelavo (OLAP). Obe podatkovni tehnologiji sta trenutno v uporabi, vendar se za večino skladišč podatkov uporablja relacijska struktura z zvezdasto shemo.
Gradnja velikega skladišča podatkov vodi do povečanja zanimanja za analiziranje in uporabo zbranih zgodovinskih podatkov. Ravno tako tudi elektronsko poslovanje in upravljanje odnosov s strankami (angl. Customer Relationship Management – CRM) povečujejo povpraševanje po vse bolj analitičnih transakcijskih podatkih. Rešitev za analiziranje zgodovinskih podatkov je uporaba tehnologije OLAP. OLAP omogoča transformacijo velikega števila zapisov podatkov v realno dimenzijo podjetja, ki je uporabnikom razumljivo, ter hitro, intuitivno in interaktivno poizvedovanje.
Orodja OLAP so v zadnjih nekaj letih postala zelo zmogljiva, vendar se za zahtevne analize vse bolj uporablja tudi tehnologija umetne inteligence in orodja pod skupnim imenom »data mining«. Pogosto poimenujejo tudi podatkovno raziskovanje, odkrivanje informacij in znanja, rudarjenje po podatkih... Ta orodja iz podatkov najdejo vzorce in modele ter iz njih povzamejo pravila. Hitro povečevanje števila sprotnih podatkov, ki izhajajo iz eksponentnega povečanja aktivnosti zaradi svetovnega spleta in elektronskega poslovanja je tudi pripomoglo k povpraševanju in nabavi teh orodij.
Od začetka 21 stoletja je spletno okolje postalo zelo pomembno za razvoj SPO kot platforma za dostavljanje orodij ali informacij. Osnova spletne tehnologije je strežnik, ki uporablja Hypertext Transfer Protocol (http). Vsebuje spletne strani, ki so izdelane z Hypertext Mark- up Language (html) in Java Script ter dostopne preko brskalnikov kot je Netscape Navigator ali Internet Explorer. Spletno orientirani SPO so zmanjšali tehnološke pregrade in omogočili managerjem in geografsko razpršenim uporabnikom lažje in cenejše pridobivanje informacij.

Zaradi notranje infrastrukture je sedaj SPO lahko uveden v podjetjih, ki imajo geografsko razpršene enote, ter se lahko vključi tudi dobavitelje in kupce po relativno nizki ceni.
Uporaba spletne tehnologije priskrbi SPO zmožnost podajanja informacij managerjem preko intraneta, dobaviteljem in kupcev preko ekstraneta ali delničarjem po globalnem Internetu.
Splet povečuje dostop in uporabo dobro zasnovanih SPO. Poleg tega pa povečuje hitro razširjanje najboljših metod analiz in odločanja (Shim, 2002, str. 115).
Izgradnja SPO z omenjenimi novimi tehnologijami ostaja zahtevno in kompleksno analitično delo. Nekateri konzultanti uporabljajo klasične vzorce za izgradnjo skladišča podatkov, drugi pa strukturirane metodologije načrtovanja (angl. structured design methodologies). Prodajalci pospešeno tržijo aplikacije t.i. poslovne inteligence na osnovi spletne tehnologije in portale z namenom pohitriti razvoj spletnih SPO. V nekaterih primerih obstoječa skladišča podatkov lahko priredimo za splet oz. so lahko dostopna tudi preko brskalnika, vendar lahko pride do težav pri dostavljanju podatkov velikemu povečanju »on-line« uporabnikov. Spletni SPO, ki združujejo skladišče podatkov in OLAP, so razpoložljivi štiriindvajset ur na dan in sedem dni v tednu. Nedvomno so se zahteve uporabnikov spremenile. Spletna podatkovna arhitektura mora obvladovati veliko število različnih poizvedb, medtem ko zagotavlja dovolj hiter časovni odziv pri neprestanem povečevanju števila podatkov in uporabnikov.
2.3 Prednosti in koristi SPO
Na vprašanje, koliko stane projekt za izgradnjo sistema za podporo odločanju in koliko časa potrebujemo od izgradnje pa do implementacije, je izredno težko odgovoriti. Odvisno je od več dejavnikov: od same kompleksnosti podatkov, obstoječe in dodatne strojne opreme, izbiri orodij, odjemalca, izvajalcu projekta...Vidimo, da je težko govoriti o cenah, kajti vsak projekt je edinstven in ima svojo ceno.
Kako pa podjetja ocenjujejo koristi, ki jih tak sistem prinaša. Nekatera podjetja se osredotočijo na kalkulacije »donosa na vložek« (ROI). Spremljajo, kako bo uvedba SPO pozitivno vplivala na prihranke: preko zmanjšanja inventarja, plačil, časa, ki ga osebje porabi za pripravo poročil, povečanja prodaje in podobno. Druga podjetja vidijo koristi sistema na bolj generičen način. Zavedajo se, da jim znanje, ki ga pridobijo s pomočjo analiz, ki jih tak sistem generira, pomaga lažje obvladovati poslovanje, kar je težko ovrednotiti. Začutijo potrebo po takem sistemu za lažje nastopanje na izredno konkurenčnem trgu (Peterson, Pinkelman, 2000, str. 23).
Peter G.Keen (1981) je izvedel zanimivo študijo. Ugotovil je, da po vsej verjetnosti odločitve za izdelavo SPO temeljijo na vrednosti in ne na stroških. Izpostavil je naslednje koristi (Bidgoli, 1997, str. 285):
1. povečanje števila obdelanih alternativ, 2. boljše razumevanje posla,
3. hitrejši odziv nepričakovanim situacijam, 4. zmožnost izdelave takojšnjih analiz, 5. nova sposobnost opazovanja in učenja, 6. izboljšana komunikacija, 7. zmanjšanje stroškov, 8. boljše odločanje,

9. bolj učinkovito skupinsko delo, 10. prihranek časa,
11. boljša uporaba virov podatkov…
Ta študija je pokazala, da so nekatere koristi merljive, večina pa je nemerljivih oz. merljivih le na podlagi subjektivne ocene, saj lahko vsak postavi svojo ceno. Na primer, teoretično lahko določimo vrednost oportunitetnih stroškov čakanja managerja na informacije, ki mu jih tak sistem takoj ponudi. Problem je v tem, kako objektivno ovrednotiti njegov čas.
Dokazano je, da SPO izboljša komunikacijo in interakcijo med strankami in organizacijo, med organizacijo in zaposlenimi, in med samimi zaposlenimi. Poveča samokritičnost odločevalcev do svojega ravnanja, dela in izkoristkom porabljenega čas. Resnično izboljšati komunikacijo in pospešiti učenje sta med najbolj pomembnimi cilji SPO (Peterson, Pinkelman, 2000, str. 29).
V splošnem velja, da SPO doseže svoj namen, če zaposleni najdejo korist v njem pri opravljanju svojega dela. Ko enkrat podjetje implementira tak sistem in ga uporabniki sprejmejo, si težko predstavljajo, kako bi lahko brez le-tega učinkovito opravljali svoje delo.
2.4 SPO v prihodnosti
V naslednjih desetih letih se predvideva veliko sprememb na področju sistemov za podporo odločanju. Trenutno prihaja do velikih sprememb v organizaciji podjetij, uporabnikih in tehnologiji (Shim, 2002, str. 120). To so trije ključni faktorji, ki bodo bistveno vplivali na nadaljnji razvoj SPO.
Moderna podjetja vse bolj izgubljajo hierarhično organizacijsko strukturo. Cilj je izoblikovati poslovne enote, ki so bolj fleksibilne in sposobne se odzivati na hitre spremembe poslovnega okolja. To bo povzročilo zmanjševanje osebja (»staff«) in srednjega vodstva, najvišje vodstvo pa bo vse bolj neposredno vpleteno v proces reševanja problemov, odločanja in planiranja.
Konkurenca in globalno poslovanje povečuje potrebe po točnih, raznolikih in hitrih informacijah. To pospešuje rabo informacijske tehnologije za planiranje, odločanje, izvajanje in upravljanje. Fleksibilna podjetja zahtevajo od managerjev, da pogosto spreminjajo njihovo osredotočenost. Zato bo SPO tu odigral osrednjo vlogo v tem hitro spreminjajočem se okolju.
Pomemben dejavnik razvoja SPO so nedvomno tudi uporabniki. Povečuje se število managerjev, ki so izredno vešči pri uporabi računalniških aplikacij in informacijske tehnologije. Zato ne bo potrebno vlagati toliko truda v izgradnjo sistema, ki bo uporaben tudi za neizkušene uporabnike. Nasprotno bodo bolje tehnično podkovani uporabniki pričakovali več funkcionalnosti od SPO, saj informacijska tehnologija predstavlja strateško orodje, ki je med ključnimi elementi konkurenčne prednosti podjetja.

Zelo očiten trend na tem področju je izredno hitro uveljavljenja spletne tehnologije (angl.
Web) kot skupne platforme, ki odpira nove zmožnosti SPO. Standardni brskalnik kot uporabniški vmesnik omogoča podjetju uvajanje nove tehnologije po relativno nizki ceni v primerjavi z specializiranimi odjemalci. Poleg tega pa uporabniki potrebujejo manj dodatnega uvajanja in podpore. Velik pomen bo imela tudi personalizacija uporabniškega vmesnika, ki bo povečalo uporabno moč SPO. Poudarek tehnologije SPO bo na mobilnih orodij, mobilnih e-storitvah in brezžičnih protokolih, kot je »WAP« (Wireless Applications Protocol), »WML« (Wireless Markup Language) in »iMode«. Na ta način bo omogočen neprestani dostop do informacij in orodij za podporo odločanju, boljše sodelovanje in lažje interaktivno odločanje kljub geografskim omejitvam. Povečala se bo produktivnost, profitabilnost in pohitril proces odločanja (Shim, 2002, str. 121).
Pozitivna plat uveljavljanja spletne tehnologije je podpora pri skupinskem vodenju in odločanju. Poleg SPO je značilen pojav vzporedne gradnje strukture navideznih (virtualnih) skupin, ki se razvijajo v t.i. navidezno (virtualno) organizacijo (angl. Collaborative Support Systems). Z intranet rešitvami in ERP sistemi (angl. Enterprise resources planning) celotna organizacija deluje preko tehnologije z malo ali brez neposredne osebne interakcije.
Navidezne organizacije lahko premagajo vse časovne in prostorske omejitve ter tako vzpostavijo trdne odnose z odročnimi poslovnimi partnerji. Končni trend v tej domeni je razvoj mobilnih telekomunikacij in t.i. tankih odjemalcev (angl. Thin client devices) kot so digitalni telefoni in dlančniki. V takem okolju lahko navidezna skupina sodeluje kadarkoli in kjerkoli brez uporabe računalnika, ki je povezan v fiksno omrežje. Na tak način lahko posameznik sodeluje na bolj prijazen način in skupina kot celota je lahko bolj učinkovita pri procesu odločanja. Odločitve so sprejete na podlagi obravnavanja problemov iz več zornih kotov, kar zagotavlja konsistentno doseganje ciljev podjetja (Shim, 2002, str. 122).
Podjetja se nagibajo tudi k uvedbi in uporabi tehnologij poslovnih portalov, da bi rešila problem eksplozije najrazličnejših podatkov in podatkovnih virov. Vedno večji problem postaja preobremenitev z množico podatkov, katerih le manjši del je resnično uporaben za reševanje določenega problema. Problem podatkovne preobremenitve je še posebej izrazit pri poslovanju podjetji. Podjetja prejemajo ogromne količine podatkov iz najrazličnejših notranjih in zunanjih virov, ki jih velikokrat niti ne uspejo klasificirati, kaj šele natančno proučiti ter iz njih pridobiti koristne informacije. Ravno to naj bi reševala tehnologija poslovnih portalov.
Pojem poslovni informacijski portal naj bi bil prvič uporabljen šele leta 1998 v poročilu skupine Merrill Lynch, kjer so postavili naslednji dve definiciji poslovnega portala (Skupina Merrill Lynch, 1998):
• spletna aplikacija, ki podjetju omogoči učinkovito izrabo podatkov shranjenih znotraj kot tudi zunaj podjetja ter uporabniku omogoča enoten dostop do pridobljenih informacij, ki so potrebne pri poslovnih odločitvah,

• zlitje programske opreme, ki združuje, upravlja, analizira ter razpošilja podatke znotraj in izven podjetja.
3. OLAP TEHNOLOGIJA
3.1 Uvod v tehnologijo OLAP
Informacije so ključnega pomena za učinkovito poslovanje. Glavni izvor le-teh so lahko podatki, ki spremljajo poslovne procese v podjetju. To so lahko podatki o partnerjih, dobaviteljih, njihovih terjatvah, artiklih, zalogah v skladiščih in še več. Vendar ti podatki sami po sebi ne pomenijo nič, če niso dostopni pravim ljudem ob pravem času ter če niso realni in primerljivi (Thomsen, 1997, str. 5).
Sprotna analitična obdelava ali OLAP (On-Line Analytical Processing) je tehnologija, ki omogoča analitikom in managerjem hiter ter zanesljiv vpogled v podatke iz različnih zornih kotov. Obdela velike količine podatkov in v vsakem trenutku uporabnikom pripravi analize poslovnih procesov, ki so ključni vir strateških informacij pri procesu odločanja (Krsnik, 2001).
V poslovnem svetu so za pripravo poročil managerjem zelo aktualne preglednice, ki imajo veliko analitično moč. Vendar se za pripravo le-teh lahko porabi veliko časa, saj more zadolžena oseba v podjetju potrebne podatke zbrati in jih primerno urediti. Tako pripravljene preglednice so lahko za uporabnike delno neuporabne, ker težko najdejo ravno tiste podatke, ki jih potrebuje. Vzrok je v hitrem spreminjanju zahtev, zato se velikokrat zgodi, da vključujejo preveč ali premalo podatkov. Orodje OLAP rešuje vse te težave, saj ponuja logično, hierarhično in strukturirano pregledovanje podatkov. Podatki so primerljivi po času (npr. neposredna primerjava letošnjih in lanskih prihodkov), možen je vpogled v agregate in če dovolimo tudi v transakcijske podatke. Glavne prednosti sistema OLAP so: preprosta uporaba, izredna hitra odzivnost in možnost za nadgradnjo. Hitro se premikamo iz agregatnih podatkih v nižje nivoje in obratno. Omogoča dodatna preračunavanja ter napovedovanja. S pomočjo ustreznega odjemalca, pa lahko na podlagi vsake izdelane preglednice v realnem času dobimo tudi rešitev v grafični obliki.
3.2 Lastnosti sistema OLAP v primerjavi s transakcijskim sistemom Transakcijski sistemi (OLTP sistem - »Online Transaction Processing Systems«) so za uspešno poslovanje podjetja nujni. Njihov cilj je avtomatizacija poslovnih procesov. Glavna značilnost je operativna baza podatkov, ki je zbirka medsebojno povezanih operativnih podatkov, ki so shranjeni v računalnikovem pomnilniku brez nepotrebnega podvajanja na način, ki omogoča njihovo uporabo številnim uporabnikom z različnimi zahtevami. Podatki so shranjeni tako, da so neodvisni od programov, ki jih uporabljajo (Grad, Jaklič, 1996, str.1).

OLTP sistemi so aplikacije, ki so namenjene za sprotno zbiranje podatkov poslovnih entitet.
Zagotavljati morajo učinkovito vnašanje, ažuriranje in poizvedovanje majhnega števila vrstic podatkov na enkrat. Tipični značilnosti le-teh sta: hiter dostop do konkretnega zapisa podatkov in učinkovito obdelovanje majhnega števila transakcijskih podatkov hkrati. Da ti sistemi dosegajo te lastnosti, so običajno relacijski in normalizirani. V tem primeru nudijo izjemno zmogljivost in zagotavljajo konsistenco podatkov (Amo, 2000, str. 8).
Relacijska baza podatkov shranjuje podatke v več med seboj povezanih tabelah. Vsaka tabela vsebuje podatke o določeni entiteti npr. o artiklih, partnerjih, dokumentih in drugo. Relacija pa je vzpostavljena tako, da imajo tabele polja, ki so tuji ključe (ključi drugih tabel) ali pa je njihov ključ celo sestavljen iz le-teh. Shema relacijske baze podatkov je zato izredno razvejana in kompleksna, saj vsebuje veliko število hkratnih podatkovnih povezav. Ker se vse transakcije beležijo v podatkovni bazi, je ta baza praviloma zelo velika. Zaradi velikega števila transakcijskih mest pa tudi polno obremenjena. Transakcijska baza praviloma obsega le podatke omejenega časovnega obdobja, ponavadi enega poslovnega leta.
Baza podatkov, ki je optimizirana za transakcijske sisteme, mora biti normalizirana. To pomeni, da se podatki v bazi ne smejo nepotrebno podvajati. V primeru podvajanja podatkov v tabeli, se uvede novo tabelo in se med seboj poveže z relacijo ena proti mnogo. Na tak način omogočimo enostavnejšo in hitrejšo ažuriranje podatkov. Relacijska struktura je izredno učinkovita za OLTP baze. Polja tabel so lahko indeksirane, da zagotovimo hitro poizvedovanje ali filtriranje (Berge, 2001, str. 857).
OLTP sistem je izdelan za obvladovanje velikega števila podatkov, ki nastajajo z vsakodnevnimi opravili, vendar ni primeren za iskanje vprašanj, ki si jih vodstvo in poslovni analitiki običajno zastavljajo. Poglejmo si vprašanje, ki je izredno poslovno usmerjeno: »Kateri artikel je izgubil največ tržnega deleža v zadnjih nekaj letih?«. OLTP sistem, ki mora v takem primeru kategorizirati in sešteti ogromno količino podatkov, ki so organizirani na relacijski način, dobesedno odpove, saj ni sposoben dela opraviti v dovolj kratkem času.
Poleg tega izvajanje takih poizvedb nad podatkovno bazo zahteva veliko specifičnega znanja, ki ga običajno poslovni analitiki nimajo. Zato bi ustrezne podatke lahko pripravljala zadolžena služba, vendar ta način ne bi zadoščal osnovni zahtevi, to je hiter odzivni čas. Zato se je pojavila potreba po posebni podatkovni bazi, ki je namenjena poslovnim analizam (Krsnik, 2001).
Za pridobivanje takih informacij potrebujemo drugačno strukturo baze podatkov, usmerjeno za obvladovanje bolj poslovnih, analitičnih in raziskovalnih poizvedb. Tako strukturo imajo podatkovna skladišča, ki so optimizirana za zajemanje in obdelovanje podatkov s pomočjo orodij OLAP. Zanjo je značilna zvezdasta (in snežinkasta) shema (več o tem v nadaljevanju), ki je zelo preprosta. Rešitev OLAP je osredotočena samo na analiziranje podatkov. Daje hitre odzive na kompleksne poizvedbe, ki zahtevajo velike količine podatkov zaradi dveh značilnosti (Berge, 2001, str. 859):

• podatki so shranjeni v večdimenzionalni obliki in ne v relacijski in
• predhodno izračuna agregate, da lahko doseže hiter odziv na uporabnikove zahteve.
Značilnost zvezdaste sheme je, da vsebuje tabelo dejstev in nenormalizirane dimenzijske tabele. Za sistem OLAP se priporoča podvajanje podatkov, saj se lahko z zmanjševanjem normalizacije poizvedbe izvajajo na ožjem predelu podatkovne baze. To povečuje hitrost obdelovanja podatkov. Dodaten prostor, ki ga zasedajo nenormalizirane dimenzijske tabele, je dejansko zelo majhen v primerjavi s prostorom, ki ga zasedejo tabele dejstev (Berge, 2001, str. 862).
Ključna prednost sistema OLAP je, da omogoča pregledovanje podatkov iz vseh možnih perspektiv, ne da bi poznali nepostopkovni strukturirani poizvedovalni jezik (SQL - angl.
Structured Query Language) in brez nepotrebnega čakanja priprav poročil. Uporabniki so zaposleni, ki so dnevno postavljeni v vlogo odločevalcev in zato nujno potrebujejo hitre ter točne informacije, ki jih ne moremo v naprej določiti. Poleg tega niso vešči pri uporabljanju baz podatkov in SQL poizvedb, da bi lahko sami neposredno poiskali potrebne podatke.
Sistem OLAP učinkovito rešuje omenjene težave. Ker olajša in pospeši proces odločanja, je sestavni del sistema za podporo odločanju.
Pomemben vir podatkov sistema OLAP so transakcijski podatki, ki dnevno nastajajo. Te podatke lahko kot kumulative prenesemo v pripravljeno skladišče podatkov v časovnih intervalih (dnevno, tedensko...) glede na potrebe uporabnikov. Lahko pa podatke črpamo neposredno iz operativne baze podatkov. Za sistem OLAP je značilna uporaba tudi zunanjih podatkov. To so podatki konkurentov, raznih finančnih in državnih inštitucij.

Tabela1: Neposredna primerjava obeh sistemov Transakcijski sistemi (OLTP) OLAP sistemi Vnašanje, brisanje in ažuriranje podatkov v realnem času
Branje in analiziranje zgodovinskih podatkov
Poizvedbe vključujejo relativno majhno število vrstic podatkov Poizvedba pogosto zajame celotno množico podatkov
Izvor podatkov so vnosni podatki Izvor podatkov so zgodovinski OLTP podatki Poročila so v naprej pripravljena in jih oblikuje programer Poročila oblikuje uporabnik sam SQL poizvedbe so preproste, v naprej definirane in preizkušene, indeksi zanje v naprej opredeljeni
Večinoma zapleteni, večdimenzionalni in mnogokrat združene ad-hoc poizvedbe
Podatki niso med sabo primerljivi Možna primerjava podatkov Sistem mora biti ažuren Periodično dodajanje podatkov (dnevno, tedensko...) Podatke lahko spreminjamo Podatke lahko samo beremo Veliko število uporabnikov (pisarniški delavci)
Majhno število uporabnikov (uporabniki so tisi, ki sprejemajo kakršnekoli odločitve)
Vir: Berge, 2001, str. 861.
3.3 Kratka razlaga osnovnih gradnikov OLAP tehnologije 3.3.1 Meritve, dimenzije in kocke
Ko govorimo o tehnologiji OLAP je potrebno razumeti pomen treh bistvenih elementov: meritev, dimenzija in (večdimenzionalna) kocka.
Namen vsake baze podatkov je shranjevanje podatkov o različnih poslovnih entitetah v podjetju, da lahko opazujemo in spremljamo njihove vrednosti. Na primer zanima nas število artiklov, ki smo jih prodali in koliko je znašala vrednost njihove prodaje. Numerični podatki (kot sta število artiklov in vrednost prodaje), ki so predmet naše obravnave in jih skušamo analizirati na podlagi združevanja in primerjanja, so meritve. To so podatki o: količini, ceni, vrednosti, dobičku, stopnji in podobno. Vsaka numerična vrednost pa ni primerna za izračunavanje agregatov, na primer razna povprečja ali pa količina zalog artiklov po skupinah artiklov. Take vrednosti, ki je smiselno izračunavati kot kumulative, so aditivne. Ostale so ne- aditivne in niso primerne za meritve, ampak jih lahko skupaj z drugimi vrednostmi vključimo v matematične operacije, da dobimo izračunane meritve. Ne-aditivne vrednosti lahko prikazujemo le, če omejimo pregledovanje takih meritev samo na nivo osnovnih podatkov (brez agregatov) (Berge, 2001, str. 874).

Dimenzije pa lahko opredelimo takole. Prikazovanje pojavov samo iz najvišje perspektive (npr. vrednost celotne prodaje), je z vidika zahtev uporabnikov premalo. Ljudje, ki želijo analizirati dano situacij v podjetju, potrebujejo razdeljene podatke po kategorijah. Tako si želijo podatke o prodaji po artiklih, poslovnih partnerjih, stroškovnih mestih, obdobju in drugo. Po drugi strani pa v večini primerov ne potrebujejo preveč podrobnih podatkov, kot je na primer vrednost vsake postavke fakture. Z vsakim razčlenjevanjem celotne slike po neki kategoriji, ali agregiranjem posameznih podatkov, tvorimo različno dimenzijo. Drugače rečeno, dimenzije kategorizirajo podatke kock na hierarhičen način. Splošno uporabljene dimenzije so: artikli, organizacijske enote, obdobje, poslovni partner, geografsko območje in drugo.
Za dimenzije je značilno, da so lahko sestavljene iz več nivojev. Omogočajo poleg razčlenjevanja agregatnih podatkov po kategorijah, še dodatno združevanje ali vrtanje v globino po korakih. V primeru več 100000 različnih artiklov ni priporočljivo prikazovati vrednosti določenih meritev po vseh artiklih na enkrat. V tem primeru je smiselno to dimenzijo tako hierarhično strukturirati, da nam v najvišjem nivoju prikazuje podatek za vse artikle skupaj, v naslednjem nivoju pa po posameznih skupinah artiklov in šele na to po posameznih artiklih. Na tak način povečamo preglednost in informacijsko moč podatkov. V splošnem lahko dimenzije in meritve definiramo tako: če želimo videti x, y in z podatek razčlenjen na a, b in c, pomeni, da x, y in z predstavljajo meritve in a,b in c predstavljajo dimenzije (Berge, 2001, str. 874).
Bistvo OLAP tehnologije pa je večdimenzionalna kocka. Sestavljena je iz dimenzij in meritev. Predstavlja kompleksno SQL poizvedbo ali množico podatkov poslovnega procesa (npr. fakturiranje), ki so shranjeni in prikazani na večdimenzionalen način. Kocke zgradimo iz atributov poslovnih dimenzij. Dimenzijski atributi so koordinatne osi kocke. Tako lahko na primer zgradimo kocko z osjo, ki predstavlja mesta iz dimenzije »Poslovni partner«, z osjo, ki predstavlja dneve iz časovne dimenzije in z osjo, ki predstavlja artikle iz dimenzije »Artikel«.
Točka v tej kocki vsebuje tri vrednosti: kraj poslovnega partnerja, določen artikel in določen dan. Če imamo v tabeli dejstev vse vrednosti prodaje, lahko merimo celotno prodajo artikla v točki na kocki. V zgornjem primeru dobimo celotno prodajo za artikel na nek dan v nekem kraju poslovnega partnerja. Če pustimo nespremenjene vrednosti za dve osi in spreminjamo vrednosti na tretji osi, lahko vidimo kako se meritve spreminjajo po spreminjajoči se osi.

Slika 2: Osnovni primer kocke, ki je sestavljena iz meritev in dimenzij Vir: Freeze, 2000, str. 278.
3.3.2 Arhitektura sistema OLAP
Arhitektura sistema OLAP je v osnovi zelo preprosta: podatke je potrebno prebrati z diska, izvesti večdimenzionalne transformacije in kalkulacije ter jih prikazati na zaslon oz. predstaviti uporabniku. V nekaterih primerih lahko uporabniki izvajajo permanentne spremembe podatkov, ki se istočasno ali kasneje zapišejo nazaj na disk.
Ne glede na zgoraj omenjeno (navidezno) preprostost, se za aplikacije OLAP uporablja veliko različnih arhitektur in nekatere so zelo kompleksne. Raznolikost in kompleksnost izhajata iz naslednjih razlogov (Thomsen, 1997, str. 217):
• Sistemi OLAP obdelujejo veliko število podatkov, ki jih ne moremo podvojiti za vsakega uporabnika. To zahteva hranjenje nekaterih ali vseh podatkov na osrednjem mestu in dostop do le-teh s pomočjo osebnih računalnikov. To pomeni, da potrebujemo arhitekturo odjemalec/strežnik (angl. »client/server«).
• Ko je arhitektura odjemalec/strežnik implementirana, sta za izvajanje večdimenzionalnih transformacij in kalkulacij na voljo tako odjemalčev kot strežnikov procesor. Odločitev, kako bo delo potekalo med dvema (ali več) razpoložljivima procesorjema, spreminja arhitekturo.
• Z vključevanjem več računalnikov obstaja verjetnost, da je potrebno v rešitev integrirati več orodij in baz podatkov. Kako, kdaj in koliko podatkov se izmenjuje, vpliva na zmogljivost prikazovalnega dela sistema in je funkcija arhitekture.

Kljub temu lahko s pomočjo slike 3 na poenostavljen način prikažemo arhitekturo odjemalec/strežni, ki je primerna za sisteme OLAP. S pomočjo te arhitekture učinkovito rešujemo težave zagotavljanja redkih a pomembnih virov podatkov, saj večdimenzionalne podatke hranimo na osrednjem OLAP strežniku in uporabniki lahko do le-teh dostopajo preko svojih osebnih računalnikov (OLAP odjemalci). OLAP strežnik pa dostopa do relacijske baze podatkov in poskrbi za transformacijo (transakcijskih) podatkov iz relacijske v večdimenzionalno obliko.
Slika 3: Poenostavljena arhitektura odjemalec/strežnik za sisteme OLAP Vir: Nigel, 2000, str. II-41.
3.3.3 Zajemanje podatkov in polnjenje OLAP kock
Osnovno vprašanje pri izgradnji sistema OLAP je, kako zbirati in zajemati podatke za poslovne analize. Osnova analiz so notranji (transakcijski) in zunanji podatki, ki morajo biti shranjeni v bazi podatkov. Kako bomo podatke zbrali, je odvisno od potreb in zahtev podjetja.
Možnih je več načinov in vsak ima svoje prednosti ter slabosti (Peterson, Pinkelman, 2000).
Slika 4 prikazuje osnovni koncept pripravljanja in zajemanja podatkov, ki je najbolj zahteven in stabilen. Gre za prenašanje in kopiranje podatkov iz sistema OLTP in zunanjih podatkov na začasno področje, kjer se podatke prečisti, združi in pretvori v obliko, ki je primerna za analitične namene (zvezdasta struktura). Po transformaciji se podatke prenese v podatkovno skladišče, ki je lahko konceptualno zastavljeno na več načinov. V našem primeru je prikazana kot skupek področnih skladišč (tabel dejstev), ki uporabljajo skupne dimenzijske tabele.
Vsako področno skladišče je osnova za eno ali več OLAP kock, ki omogočijo s pomočjo različnih uporabniških vmesnikov (aplikacij) učinkovito pregledovanje in primerjanje podatkov iz različnih zornih kotov.

Slika 4: Osnovni koncept pripravljanja in zajemanja podatkov za sistem OLAP Vir: Peterson, Pinkelman, 2000, str. 53.
Opisan koncept izgradnje sistema OLAP je za velika podjetja zelo primeren, ker zagotavlja stabilen sistem in v primeru velikega števila podatkov omogoča učinkovito delovanje. Tak pristop skladiščenja podatkov in izdelave sistemov OLAP pa je izredno drag in zahteva veliko časa. Ker velikokrat uporabniki potrebujejo tak sistem takoj in po nizki ceni, se uporablja tudi druge koncepte izgradnje. Najbolj enostaven in hiter je črpanje podatkov neposredno iz operativne baze. V tem primeru ne gradimo skladišča podatkov in se hkrati izognemo prenašanju ter predhodnemu pripravljanju podatkov. V vsakem primeru pa je potrebno podatke prestrukturirati oz. omogočiti orodjem OLAP dostop do le-teh. To naredimo s pomočjo navideznih tabel, ki jih pripravimo kar v transakcijski bazi podatkov in predstavljajo osnovo za gradnjo OLAP kock. Gre za kratkoročno rešitev, ki se običajno uporablja v primeru hitrega vpeljevanja sistema.
V primeru velike količine podatkov lahko nastanejo določene težave kot so prepočasno generiranje in osveževanje kock. Navidezne tabele, ki morajo združiti več tabel skupaj, predstavljajo izredno kompleksne in procesno zahtevne operacije. Zato se lahko v takem primeru uporablja vmesni pristop. Nekatere operativne podatke prekopiramo v ustrezni obliki na začasno področje in na tej osnovi gradimo OLAP kocke. Gre za delno področno skladišče.
Prekopirani so samo transakcijski podatki, šifranti pa se črpajo direktno iz operativne baze.
Na tak način omogočimo hitrejše generiranje kock in pregledovanje ROLAP ali HOLAP kock.
Za obe delni rešitvi velja, da sta primerni za prototipni pristop, saj omogočata hitro vzpostavitev sistema. Uporabniki lahko v kratkem času začnejo uporabljati sistem in aktivno sodelovati pri nadaljnjem razvijanju. Dolgoročno pa je smiselno sistem dopolniti do osnovnega koncepta, saj rešuje težave arhiviranja podatkov in uporabe le-teh za časovne analize (ugotavljanje trendov in drugo). V transakcijskih bazah podatkov običajno shranjujemo podatke tekočega in morebiti še prejšnjega poslovnega leta. Poleg tega pa s skladiščenjem podatkov dosežemo red nad podatki, saj nekatera podjetja uporabljajo več aplikacij, ki shranjujejo podatke na različne lokacije.

Pri obeh delnih rešitvah OLAP kocke predstavljajo področna skladišča. Pri osnovnem konceptu izdelave sistema OLAP pa so področna skladišča (oz. skladišče podatkov) izdelana iz niza tabel v relacijski bazi podatkov in OLAP kocke predstavljajo metodo s katero uporabnikom predstavimo podatke iz področnih skladišč.
3.3.4 Podatkovna struktura večdimenzionalnih kock
Spoznali smo, da normalizirana relacijska baza podatkov, ki se uporablja za transakcijske sisteme, ni primerna za analitične namene. Zato se za OLAP sisteme v večini primerov uporablja podatkovno skladišče, ki se je pojavilo, ko je nastala potreba po zbiranju vseh podatkov na enem osrednjem mestu in izvajanju poslovnih analiz. Pravilno razumevanje podatkovnega skladišča, daje osnove za razumevanje večrazsežnosti OLAP kock.
V večini primerov se za podatkovnega skladišča uporablja zvezdasto podatkovno strukturo.
Ime je dobila po njenem videzu. Sestavljena je iz več dimenzijskih tabel, ki so povezane z osrednjo tabelo (t.i. tabelo dejstev) z relacijo 1:N. Spodnja slika prikazuje primer take strukture.
Slika 4: Primer zvezdaste sheme Vir: Interna dokumentacija projekta.

Tabela dejstev je srce zvezdaste sheme in zavzame 97% do 99% prostora na disku od celotne strukture, ker vsebuje vse vrednosti, ki jih z orodij OLAP obdelujemo. Sestavljena je iz dveh različnih tipov polj. Prvi so tuji ključi dimenzijskih tabel in drugi so vrednosti meritev. Tabele dejstev običajno nimajo posebej polja za glavni ključ, ampak je le-ta sestavljen iz vseh tujih ključev. Prilagojene so za izredno hitro naraščanje števila vrstic podatkov, saj se jih z novimi podatki polni na vsako uro, dan ali teden. Na primer nočno polnjenje faktur, ki so bile izstavljene prejšnjega dne.
Dimenzijske tabele so razporejene okoli centralne tabele (tabele dejstev) in omogočajo pregledovanje meritev iz različnih perspektiv. Vsaka dimenzijska tabela predstavlja eno dimenzijo kocke. Vsebinsko so to entitete, ki se pojavljajo v poslovnem procesu: izdelki, poslovne enote, valuta, vrsta poslovanja in predvsem obdobje.
Za zvezdasto shemo je značilna izredna preprostost. Osnovna struktura nima verige med seboj povezanih tabel. Vsaka dimenzijska tabela je direktno povezana s tabelo dejstev (primarni ključ do tujega ključa). To omogoča hitro poizvedovanje nad velikim številom podatkov.
Tabele, povezave in polja v tej shemi imajo posebno označevanje, prilagojeno večdimenzionalni strukturi OLAP kock. Običajno se podatkov v tabelah nikoli ne ažurira in briše, izjemoma v primeru popravljanja napak ali pa pri popravljanju celotne sheme.
Optimizirana je za namene sprotnega analitičnega obdelovanja in zato mora omogočiti učinkovito branje podatkov. Dimenzijske tabele so nenormalizirane, ker potrebujemo minimalno število povezav. V nekaterih primerih pa se uporablja tudi snežinkasto shemo, za katero je značilno, da so tudi dimenzijske tabele normalizirane in posledica je bolj razvejana struktura podatkov.
3.3.5 Shranjevanje večdimenzionalnih podatkov
Pri izdelavi kock je potrebno določiti način shranjevanja obdelanih podatkov (osnovnih podatkov in agregatov). Običajno lahko podatke shranimo na dve različni lokaciji (Berge, 2001, str. 877):
• v relacijsko bazo podatkov, ki jo uporabljamo kot primaren vir podatkov ali
• v poseben repozitorij, ki je optimiziran za večdimenzionalno strukturo.
Glede na izbran način shranjevanja podatkov razlikujemo MOLAP, ROLAP in HOLAP.
Izbira enega izmed treh načinov vpliva na učinkovitost delovanja sistema OLAP.
MOLAP (Multidimensional OLAP) uporablja način shranjevanja podatkov, ki je bil narejen izrecno za večdimenzionalne analize. MOLAP podatke prepiše iz vira podatkov (podatkovno skladišče ali transakcijska baza) v specializirane večdimenzionalne strukture. Ko se kocke pregledujejo, vir podatkov ni več potreben, ker so vsi podatki že v repozitoriju kock. Ravno tako se vsi izračunani agregati prepišejo v specializirano večdimenzionalno kockasto strukturo.

ROLAP (Relational OLAP) uporablja strukturo relacijskih baz podatkov. Podatki se ne prepišejo iz vira podatkov. V primeru pregledovanja podatkov osnovnega nivoja se le-ti potegnejo neposredno iz vira podatkov. Agregati pa so shranjeni v isti relacijski bazi podatkov v tabelah, ki jih orodje samo izdela.
HOLAP (Hybrid OLAP) kombinira oba načina. Podatke upravlja kot ROLAP in agregate pa kot MOLAP.
Izbira posamezne možnosti različno vpliva na čas procesiranja, prostor shranjevanja in hitrost pregledovanja kock. Relacijski način shranjevanja kot ga uporablja ROLAP je najlažje razumljiv, saj so agregati shranjeni kot tabele v relacijski bazi in jih lahko pregledujemo z SQL stavki. Za lažje razumevanje primernost posameznega načina shranjevanja OLAP podatkov, bom za vsakega podal nekaj značilnosti (Peterson, Pinkelman, 2000).
Značilnosti MOLAP-a so:
1. Omogoča najhitrejše pregledovanje podatkov, tudi v primeru brez agregatov. Podatki, ki so v prilagojeni večdimenzionalni obliki, so običajno hitreje dostopni.
2. Potrebuje več prostora za shranjevanje podatkov kot HOLAP. V primeru manjšega odstotka izračunavanja agregatov porabi več prostora kot ROLAP.
3. omogoča pregledovanje vseh nivojev podatkov tudi brez povezave z osnovnim virom podatkov. Primeren je za situacije, kadar se potrebujejo podatki tudi na drugih lokacijah, za prenosne računalnike in ljudi, ki niso vedno povezani v omrežje podjetja.
4. Ni učinkovit v primeru, ko operiramo z relativno veliko količino podatkov, ki se jih malo uporablja. Porabimo veliko časa za procesiranje kock in prostor za shranjevanje podrobnih in agregatnih podatkov v večdimenzionalni strukturi.
Značilnosti ROLAP-a:
1. Pregledovanje podatkov poteka počasneje kot pri MOLAP, enako pa v primerjavi z
HOLAP.
2. Čas procesiranja je občutno krajši. Še posebej v posebej v primeru velikega števila agregatov.
3. Pregledovanje podatkov ni možno, dokler nismo povezani tudi s primarnim virom podatkov.
4. V primeru, ko ne uporabljamo agregatov, ne potrebujemo dodatnega prostora za shranjevanje.
5. Agregati pa porabijo veliko več prostora v primerjavi z MOLAP in HOLAP (še posebej v primeru določanja velikega odstotka predhodnega izračunavanja agregatov).
Značilnosti HOLAP-a:
1. Pri manjšem številu agregatov deluje enako kot ROLAP, pri večjem pa kot MOLAP.
2. Brez povezave s primarnim virom podatkov ni mogoče pregledovanje podatkov.
3. Je zelo primeren, če ne pregledujemo osnovnih nivojev podatkov. Če pregledujemo samo agregate, omogoča enako hitrost pregledovanja kot MOLAP, hkrati pa prihrani čas osveževanja kock in prostor na trdem disku.

3.4 Učinkovita izdelava sistema OLAP
Postavitev sistema OLAP (in skladišča podatkov) je pred nekaj leti veljal za izredno drag projekt. Namenjen je bil samo velikim podjetjem, ki so lahko vložila po več milijonov dolarjev. Uspešni projekti so vplivali na povečanje konkurenčnosti, dodane vrednosti, donosnost na vložek (ROI) in drugo. Veliko projektov pa je bilo neuspešnih zaradi raznoterih dejavnikov. Velikokrat se je zgodilo, da so bili načrti preveč optimistično zasnovani, kar je kasneje povzročilo dodatno podaljševanje rokov izdelave in povečevanje stroškov investicij.
To je privedlo najprej do počasnega zmanjševanja interesa s strani vodstva in kasneje do ustavitve projekta. Strokovnjaki so na področju skladiščenja podatkov vložili veliko truda, da bi razvili metodologijo, ki bi povečala možnosti uspeha. Poleg tega so se osredotočili na to, kako omogočiti uporabo sistemov OLAP tudi manjšim podjetjem.
Na odgovor velikim in dragim projektom skladiščenja podatkov, je veliko strokovnjakov v letih 1997/1998 začelo širiti idejo o cenejšem, manjšem in hitrejšem skladišču podatkov oz. t.i. področnem skladišču (data marts). Z razvojem strojne opreme in novih orodij, se je cena takega projekta zalo zmanjšala in postala dostopna tudi manjšim podjetjem. Microsoft je na podlagi svoje strategije ponudil za dostopno ceno zmogljiva orodja (MS SQL SERVER, MS OFFICE...), ki naj bi vsebovala vse za razvoj sistema OLAP (Peterson, Pinkelman, 2000).
Z razvojem področnih skladišč se je začelo uveljavljati tudi prototipni pristop izgradnje sistemov OLAP, ki omogoča uvajanje delnih rešitev za nižjo ceno in sprotno nadgrajevanje glede na potrebe uporabnikov. Tak pristop omogoča implementacijo sistema tudi v manjših podjetjih in hkrati se poveča možnost uspeha projekta, saj uporabniki dobijo v kratkem času (in po ustrezni ceni) ravno to kar potrebujejo.
V splošnem velja, da mora OLAP služiti poslovnemu namenu podjetja. Da dosežemo ta cilj, moramo pri izvajanju projekta upoštevati naslednje naloge (Peterson, Pinkelman, 2000):
• Od uporabnikov ugotoviti, do katerih informacij si želijo dostopati s pomočjo OLAP pregledovanja.
• Prečistiti podatke iz OLTP sistema in jih pretvoriti v primerno (zvezdasto) strukturo.
• Izgraditi večdimenzionalne kocke.
• Investirati v novo strojno opremo.
• Izdelati ali nabaviti OLAP odjemalca.
• Uvesti uporabnike v sistem.
Zelo zanimivo vprašanje je, kakšen bi moral biti sistem OLAP. Nigel Pendse in Richard Creeth, avtorja dela »OLAP Report«, sta razvila test imenovan FASMI (fast analysis multidimensional information), ki opredeljuje ali se produkt uvršča med sisteme OLAP.
Sistem OLAP mora omogočiti:
1. Fast – Hitro pregledovanje. Po njihovem mnenju mora biti odziv poizvedbe manj kot v petih sekundah. Hitrost manjša od dveh sekund daje uporabniku občutek, da se podatki prikažejo v hipu. Razlagata, da je ta odziv več kot samo cilj, saj je to nujna značilnost sistema OLAP. Obstaja več načinov kako to doseči. Za doseganje hitrega odziva pri vseh poizvedbah je potrebno uporabljati MOLAP način shranjevanja.

2. Analysis – Aplikacija mora vsebovati analitična orodja tako za razvijalca, kot za uporabnika.
3. Shared – Kocka mora zagotoviti varovanje določenih podatkov.
4. Multidimensional information – glavna značilnost sistema OLAP je ravno v prikazovanju večdimenzionalnih podatkov.
Hiter začetni razvoj je tudi eden od dejavnikov, ki lahko pozitivno vpliva na uspeh projekta.
V primerih, ko je OLAP nekaj novega v podjetju, je zelo priporočeno, da se uporabi prototipni pristop: izdela se del sistema in se ga predstavi uporabnikom, da dobijo občutek, kakšen naj bi bil končni rezultat. Tako se lahko že v tej fazi izvajajo določeni popravki ali pa izpusti kar uporabniki v resnici ne potrebujejo. Običajno se izbere tisti del, ki ne zahteva veliko predelavo podatkov in dopušča črpanje le-teh neposredno iz operativne baze. Določi se MOLAP kocke in čas osveževanja ob nočnih urah, ko je operativna baza neobremenjena. Za uporabniški vmesnik se lahko pripravi spletno stran (z uporabo vrtilnih tabel) ali uporabi MS Excel 2000, ki zahtevata izredno malo programiranja. Kupiti je možno tudi specializirane programe, ki imajo vgrajene že vse potrebne funkcije (Peterson, Pinkelman, 2000, str. 31).
Zelo pomembno je zagotoviti kakovostne podatke. Problem je v tem, da operativni podatki niso vedno točni, saj lahko pride do nepravilnosti pri vnašanju, brisanju in podobno. Podatki so lahko manjkajoči, nekonsistentni ali netočni. Zato je potrebno podatke preverjati in ob prenosu zagotoviti, da so zajeti vsi potrebni podatki. Paziti pa je potrebno tudi na situacije, ko se popravlja operativne podatke, ki so že preneseni v podatkovno skladišče (Peterson, Pinkelman, 2000).
OLAP odjemalec je tudi bistven za uspeh projekta. Imeti mora naslednje lastnosti: biti mora preprost za uporabo, zagotoviti mora intuitivno metodo izdelovanja novih poročil, podpirati mora grafično prikazovanje podatkov, »kaj-če« (angl. »what if«) analize, shranjevanje pogledov v različnih oblikah (html), tiskanje izdelanih poročil, ustrezno zaščito podatkov, hiter odziv in drugo. Zelo pomembno je, da omogoča izvajanje naslednjih operacij (Jarke, 2000, str. 112):
• Združevanje (angl. Roll-up, Drill-up ali Consolidate): Poizvedba, ki omogoča združevanje in prikazovanje podatkov, ki spadajo v enako skupino ali dimenzijo za hitro in grobo pregledovanje stanja. Nov podatek (agregat) je lahko predstavljen kot vsota vseh podatkov, ki spadajo v to skupino, ali kot delež celote.
• Vrtanje v globino (angl. Roll-down, Drill-down, ali Drill-through): Poizvedba za prikazovanje bolj detajlnih podatkov. Koraki vrtanja so definirani s hierarhijo dimenzij.
• Filtriranje (angl. Filtering, Selection ali Screening): Možnost izbiranja kriterijev za prikazovanje podmnožice podatkov. Na primer, velikokrat se uporablja prikazovanje kupcev, ki so presegli določeno vrednost prodaje.

• Listanje (angl. Slicing): Pregledovanje vseh podatkov na podlagi enega ali več izbranih članov dimenzije. Lahko si predstavljamo kot en list ali izrez kocke.
• Omejevanje (angl. Scoping): Omejevanje pogleda na določeno podserijo oz. področje podatkov.
• Vrtenje dimenzij (angl. Rotate): Spreminjanje orientacije dimenzij kocke. V primeru preglednice gre za preprosto premeščanje dimenzij iz stolpca v vrstico in obratno.
Nenazadnje je zelo pomembno uporabiti ustrezno strojno opremo. V večini primerov je potrebno strojno opremo nadgraditi. Transformacija podatkov in generiranje kock sta procesno intenzivna in časovno obsegajoča procesa. Sistem bo hitreje deloval, če se uporablja zmogljive več-procesne računalnike. Tako odjemalec kot OLAP strežnik potrebujeta zmogljiv spomin za predpolnjenje podatkov. Potrebno je imeti zmogljive diske za skladiščenje podatkov in shranjevanje varnostnih rezerv (Peterson, Pinkelman, 2000).
4. IZDELAVA SISTEMA OLAP KOT DEL SISTEMA ZA PODPORO ODLOČANJU
Problem, ki ga zastavljam v tej diplomski nalogi, je, kako izdelati tak sistem poročil, ki bo enostaven za izvedbo, preprost za uporabo ter vsebinsko koristen. Ravno to bom poskusil prikazati na osnovi praktičnega primera sistema OLAP, ki smo ga (skupaj s projektno skupino) izdelali v podjetju, ki se ukvarja z razvojem in implementacijo informacijskih sistemov.
Prvi poslovni partner, ki je sprejel izdelavo sistema OLAP, je bilo trgovinsko podjetje na drobno in debelo. Na podlagi njihovih potreb je bila izdelana vsebinska zasnova sistema, ki ga bom predstavil. Vendar cilj projekta ni bil izdelati omenjen sistem samo za naročnika, ampak pripraviti osnovni model, ki bi zadovoljil osnovne potrebe odločanja vsakega poslovnega partnerja. S tem osnovnim »paketom« bi podjetje nastopilo na trg in svojim obstoječim strankam ponudilo nadgradnjo že izdelanega informacijskega sistema. To bi bila samo osnova za komunikacijo s partnerji, saj se zavedajo, da vsako podjetje deluje drugače in zato tudi potrebuje specifične rešitve. Glede na dodatne potrebe poslovnega partnerja, bi sistem še dodatno razvili in prilagodili njihovim potrebam. Dejstvo je, da podjetje v celoti pozna poslovne procese, podatkovne modele in celotno informacijsko strukturo svojih partnerjev.
Zato bi omogočilo učinkovit, za partnerja neboleč in cenovno ugoden sistem OLAP.
Izdelava sistema OLAP je izredno zahteven projekt, saj zahteva veliko časa in denarja. Enako velja za naš projekt, zato ga ne nameravam prikazati v celoti, ampak le ključne faktorje, ki so po mojem mnenju pomembni za uspešnost le-tega. Prikazal bom samo del vseh poročil OLAP, ki so splošno uporabne za večino podjetij.
Projekt smo izvajali v več fazah. Sledili smo logičnemu zaporedju in projekt razdelili na pet glavnih faz: ugotavljanje potreb, načrtovanje, izdelava, implementacija in vzdrževanje.

Nekoliko več poudarka bom dal na fazo načrtovanja in implementacije, ker sta po mojem mnenju med najbolj pomembnimi in kritičnimi fazami. Uspešnost le-teh ključno vpliva na uspešnost samega projekta. Na kratko bom prikazal tudi fazo izdelave (v ožjem pomenu besede) sistema in končni izgled rešitve. Za konec pa bom analiziral prednosti in slabosti sistema ter težave, ki so se v praksi pojavile.
4.1. Ugotavljanje potreb
Pred začetkom načrtovanja in izdelave sistema, smo poskusili ugotoviti, kakšne potrebe imajo v resnici uporabniki in ali je izdelava takega sistema upravičena. Izvedli smo analizo trenutnega stanja in ugotovili, da ima naročnik kot trgovsko podjetje na drobno in debelo velike težave v komercialnem delu. Imeli so neučinkovit sistem vodenja, nadzorovanja in naročanja novih zalog. Težave so imeli tudi pri spremljanju terjatev in obveznosti. Potrebovali pa so tudi boljši pregled nad tedensko prodajo po vseh stroškovnih mestih. Večina težav je bila povezana z operativnim nivojem odločanja in vodstvo je sprejelo odločitev, da bodo imele te težave prioriteto pri izdelavi sistema.
4.2. Načrtovanje sistema
Uspešnost projekta je zelo pomembna od uspešnosti same faze načrtovanja, kajti dobro narejen načrt lahko prihrani veliko denarja in čas, kar je za stranko bistvenega pomena. V okviru te faze smo pripravili celotno strategijo izdelave in implementacije projekta. Izvedli smo analizo potrebnih osnovnih poročil in analiz, ki naj bi zadovoljevale potrebe različnih ravni odločanja. Določili smo razvojno okolje in vse postopke izdelave. Nazadnje smo definirali končni izgled izdelka. Osredotočili smo se na lastnosti kot so preprostost, intuitivnost in preglednost, ki so vplivali na samo izbiro odjemalca.
Sodelovali so strokovnjaki z različnih področij, saj je izdelava načrta zelo kompleksna naloga, ker zahteva znanje iz ekonomskega, organizacijskega, informacijskega, programerskega in projektnega področja.
4.2.1 Definicija analiz in poročil
V vsakem podjetju se nenehno odvija proces odločanja, ki omogoča, da se podjetje razvija in dosega uspešne rezultate. Za zagotavljanje konkurenčnosti, pa so potrebne prave informacije v pravem času, na podlagi katerih lahko vodstvo, ostali managerji in analitiki pravilno ravnajo in se odločajo. Ravno to smo hoteli v tem delu ugotoviti, in sicer, katera poročila običajno omenjeni zaposleni potrebujejo za učinkovito odločanje. Odgovor na to vprašanje daje osnovo za razvijanje sistema.

Projekt bo uspešen le takrat, ko bo ustrezal potrebam uporabnikov. Zato so le-ti tudi najboljši vir informacij za izdelavo vsebinskega načrta sistema. Za osnovo smo uporabili spisek potreb, ki smo jih definirali na podlagi prejšnje analize. Izvedli smo še dodatne intervjuje, da bi pokrili čim več potreb. Tukaj so nastale resne težave, ki so pomembno vplivale na vse faze razvoja projekta. Bodoči uporabniki niso znali definirati vsebine analiz in poročil, ki bi jih potrebovali, oz. so nam podali le grobe smernice za vsebinsko plat sistema. Prišli smo do spoznanja, da v resnici uporabniki niso točno vedeli, kaj lahko od takega sistema pričakujejo.
Predstavljali so si celo to, da bomo sami ponudili nek nabor analiz in poročil, ki bodo reševale vse njihove težave.
To nas je prisililo k razmišljanju izdelave osnovnega paketa analiz in poročil OLAP kot dela sistema za podporo odločanju. Hitro in učinkovito bi postavili prototip sistema in uporabnikom omogočili spoznavanje le-tega, da bi dobili občutek, kaj lahko od njega pričakujejo. Nato bi šlo za nadaljnji proces nadgrajevanja glede na sprotne zahteve uporabnikov, saj smo predvidevali, da se jim bodo po določenem času uporabe »kristalizirale« še druge potrebe. Po določenih nadgradnjah bi prišli do sistema OLAP, ki bi v podjetju učinkovito podprl proces odločanja.
Na podlagi prvih razgovorov z vodstvom podjetja smo ugotovili, da si sprva želijo rešiti potrebe operativnega nivoja, zato smo tudi gradili načrt na tej osnovi. Začeli smo s postavitvijo in definiranjem poročil, ki bi rešila vprašanja povezana z operativnim nivojem odločanja. Zaradi boljše sistematičnosti, smo poročila združevali po skupinah glede na poslovne funkcije. Na kratko bom za vsak sklop naštel nekaj poročil, ki bodo osnova za razvoj produkta. Končni produkt je moral vsebinsko ustrezati definicijam poročil.
Del poročil, ki smo jih definirali so: PRODAJA: ● Prodaja po obdobjih
• Prodaja po kupcih
• Prodaja po artiklih
• Tedenska prodaja skupin artiklov po stroškovnih mestih
• Prodaja po skupin artiklov – drevo
• ABC analiza kupcev
• Razlika v ceni po kupcih
• Razlika v ceni po artiklih KADRI: ● Število zaposlenih delavcev
• Struktura po spolu (aktivni)
• Izobrazbena struktura
• Število oseb s prenizko izobrazbo
• Osebe s prenizko izobrazbo
• Plače po izobrazbi
• Bruto in neto plača po osebah ZALOGE: ● Zaloge po artiklih
• Zaloge po skladiščih

• Stanje zalog artiklov v skladiščih
• Gibanje zalog po vrstah prometa
• Gibanje zalog po organizacijskih enotah in skladiščih
• Gibanje zalog po poslovnih partnerjih NABAVA: ● Naročila po dobaviteljih in artiklih
• Dekompozicijsko drevo naročil
• Prejemi po dobaviteljih in artiklih
• Dekompozicijsko drevo prejemov BILANČNI KONTROLING: ● Bilanca stanja
• Bilanca uspeha
FINANČNI KONTROLING: ● Odprte terjatve po kupcih
• Terjatve po razredih zamud in kupcih
• Statistika terjatev po razredih zamud
• Zapadle terjatve
• Odprte obveznosti do dobaviteljev
• Zapadle obveznosti 4.2.2. Razvojno okolje
Načrt izdelave sistema mora vsebovati tudi definicijo razvojnega okolja. Izbira strežnika in orodij vpliva na stroške, hitrost razvijanja, stabilnost in učinkovitost sistema.
Na tržišču je veliko ponudnikov različnih orodij in sistemov za upravljanje baz podatkov, zato je potrebna podrobna analiza za določitev razvojnega okolja, ki bo omogočilo učinkovito izdelavo in delovanje sistema z najnižjimi možnimi stroški. V našem primeru smo izhajali iz dejstva, da so poslovni partnerji imeli informacijski sistem zgrajen na Oraclovi tehnologiji.
Vsi podatki, ki jih je bilo potrebno zajeti, so bili shranjeni v bazi podatkov Oracle 8i (8.1.7.).
Določiti pa smo morali še orodja, s katerimi naj bi podatke obdelali in na kakšen način naj bi le-te prikazovali.
Trenutno je tehnologija OLAP najprimernejša za obdelovanje velikih količin podatkov. Trg orodij OLAP je izredno velik in indeksi rasti trga kažejo, da se velikost trga od leta 1994 (0,5 milijarde USD) pa do 2001 (3,3 milijarde USD) vseskozi povečuje. Kljub padcu rasti trga v letu 2001 in neprestanem zniževanju povprečne cene orodij OLAP, napovedujejo nadaljnjo rast velikosti trga in naj bi leta 2004 znašala okoli 5 milijard USD (Nigel, 20.8.2002).
Slika 6 prikazuje šest največji ponudnikov orodij OLAP in vrednosti njihovih tržnih deležev.
Opazimo lahko, da je podjetje Microsoft s pomočjo svoje strategije nizkih cen od leta 1998 (leto vstopa na trg) neprestano povečeval svoj tržni delež in je trenutno na prvem mestu skupaj s Hyperion Solution. Oracle s svojim orodjem Oracle Express ne dosega pravega namena in že od leta 1998 beleži padec vrednosti tržnega deleža. Izdelal je že nov koncept v okviru strategije Oracle 9i, vendar pravi rezultati bodo vidni šele v prihodnosti.

Slika 6: Tržni deleži šestih največjih ponudnikov orodij OLAP Vir: Nigel, 20.8.2002.
Oracle in Microsoft sta strateška partnerja našega podjetja, zato smo se osredotočili na izbiro med tema dvema ponudnikoma. Na podlagi zgoraj omenjene analize trga in mnenj članov projektne skupine, smo se odločili za Microsoftovo tehnologijo OLAP, ki je vključena v SQL SERVER 2000. Zajema pa strežnik OLAP Server in orodje za izdelovanje večdimenzionalnih kock Analysis Services. Ugotovili smo, da je to izredno preprosto, a hkrati učinkovito orodje po dostopni ceni tudi za srednje velika podjetja. Ne trdimo, da je ta izbira v splošnem najboljša, ampak je za naš primer glede na dano situacijo optimalna.
Ostalo nam je še vprašanje, na kakšen način naj bi analize in poročila prikazovali. Gre za odločitev o odjemalcu. Ker je to izredno pomembna izbira, smo izvedli podrobno analizo, ki jo bom prikazal v naslednjem poglavju.
4.2.3. Izbira odjemalca
Odjemalec je zelo pomemben člen sistema in je z vidika uporabnika celo najpomembnejši, saj mu omogoča uporabo sistema in dostop do želenih podatkov. Še tako zmogljiv sistem je neuporaben, če je za uporabnika neprijazen. Zato smo si zastavili cilj izdelati tak sistem, ki bo nedvomno zelo preprost za uporabo. Zavedali smo se, da v večini primerov uporabniki nimajo veliko časa za učenje oz. uvajanje in niso nadpovprečno vešči ter iznajdljivi pri uporabi aplikacij. Zato je za uspeh projekta izredno pomembno, da ima odjemalec naslednje lastnosti: biti mora preprost in intuitiven za uporabo, podatke mora prikazovati zelo pregledno, podpirati mora možnost v naprej pripravljanja pogledov ter omogočiti dovolj hitre poizvedbe (vrtanje v globino).

Pri izbiri odjemalca obstaja več možnosti. Prva možnost je izdelati samostojno aplikacijo v določenem programskem jeziku, druga je izdelava spletne aplikacije in tretja pa je nakup že izdelane aplikacije od specializiranega podjetja. Vse tri možnosti imajo svoje prednosti in slabosti. Na podlagi našega trenutnega znanja iz programiranja in strateških partnerskih povezav podjetja, smo v ožji izbor vključili naslednje: izdelavo samostojne aplikacije v Visual Basicu (VB), MS Excel 2000, Microsoft Data Analyzer in Knosys Proclarity 4.
Pri izbiranju ustreznega odjemalca, smo poleg zgoraj omenjenih lastnosti upoštevali še stroške (nakup licenc, delo programerja...) in čas, ki je potreben za razvoj do končnega prikazovanja poročil. Kot pri vsakem projektu smo tudi mi morali izpolnjevati določene izvedbene roke. Paziti smo morali, da ne porabimo veliko časa pri stvareh, ki so mogoče že razvite. Zato smo se hitro odločili, da bomo izbrali odjemalca, ki ima že vgrajene določene funkcije in omogoča običajne analize. Sledilo je opustitev možnosti razvijanja aplikacije v VB in MS Excel 2000, kljub nizki ceni.
Data Analyzer (slika 7) je na prvi pogled izredno zanimiv. Je Microsoftov produkt in cenovno zelo ugoden. Kmalu naj bi prišel v paket Microsoft Office in zato dostopen vsakemu podjetju.
Poleg tega je grafično lepo izoblikovan, tako da daje vtis izredno profesionalnega in zmogljivega progama. Kljub temu pa se nam je zdel za uporabnika premalo prijazen in motilo nas je, da ne omogoča preprostega dostopa do vnaprej pripravljenih prikazov, čeprav je to delno v nasprotju s filozofijo OLAP. Dejstvo je, da od uporabnika ne moremo pričakovati, da bo sam odpiral kocke ter izdeloval analize oz. poročila, ki jih potrebuje. Neprestano smo razmišljali v tej smeri, da moramo uporabniku vnaprej pripraviti ključne poglede, ki mu omogočajo hiter dostop do agregatnih podatkov. Z enim do treh klikov pa mora priti do področja, ki ga v dani situaciji zanima. V nasprotnem primeru je velika verjetnost, da uporabnik enostavno ne bo uporabljal sistema, bodisi zaradi tega ker nima časa, ali pa ker se mu enostavno ne ljubi, saj ima že dovolj drugih zahtevnih opravil.

Slika 7: MS Data Analyzer
Vir: Interna dokumentacija projekta.
Knosys Proclarity 4 je program za poslovno analizo in je bil izdelan posebej za Microsoft OLAP Services. Je grafični program za vizualizacijo in analizo podatkov. Ugotovili smo, da je narejen tako, kot smo si končni produkt tudi zamislili. Uporabnik z enim klikom odpre aplikacijo, ki mu v desnem okencu ponuja vse potrebne poglede, ki jih lahko v naprej pripravimo. Enostavno klikne na željen pogled in se mu na desnem delu pokažejo podatki tako v tabelarični kot v grafični obliki. Na podlagi še nekaj klikov (vrtanje v globino ali združevanje podatkov) lahko pride do informacij, ki jih potrebuje, in v obliki, ki si sam želi.
Poleg tega je priprava pogledov zelo preprosta in omogoča v kratkem času izdelavo veliko koristnih poročil, saj ima že vgrajene splošne funkcije, npr. izračun kumulativ in stanj, izdelavo lestvic, dekompozicijskih dreves, perspektiv in drugo. S pomočjo poznavanja jezika MDX (angl. Multidimensional Expressions) pa se lahko izdela še vse ostale zahtevne analize.
To je sintaksa, ki podpira množico funkcij za definiranje in manipuliranje z večdimenzionalnimi objekti in podatki.
Knosys Proclarity 4 je cenovno nekoliko dražji od obravnavanih kandidatov a vendar v mejah, ki jih ta projekt dopušča. Po drugi strani pa prinaša koristi kot so prihranek časa in ljudi (denarja) pri razvijanju ter izredno dober uporabniški vmesnik, kar je zelo pomembno za uspeh projekta. Na podlagi omenjenih argumentov je bila naša končna odločitev jasna. Izbrali smo program Knosys Proclarity 4. Izgled programa prikazuje slika 8.

Slika 8: OLAP odjemalec Knosis Proclarity 4 Vir: Interna dokumentacija projekta.
4.2.4. Postopki in specifikacije razvoja
Določili smo vsebino rešitve, tehnologijo za razvijanje sistema ter uporabniški vmesnik. V grobem bi lahko bilo to vse za začetek razvijanja. Vendar je priporočljivo še definirati vse postopke in specifikacije razvoja, ki lahko v nadaljevanju izredno olajšajo delo in preprečijo možne zaplete. Tudi v tej fazi se moramo opirati na cilje, ki smo si jih zastavili na začetku.
Skupaj z vsemi razvijalci, smo po dolgih analizah in razgovorih definirali, kako naj bi sistem tehnično izdelali oz. razvili.
Prvi problem, ki ga je bilo potrebno rešiti, je bil sam način zajemanja podatkov. Vemo, da so podatki osnova izgradnje vsakega SPO. Zato smo se takoj vprašali, kateri način zajemanja podatkov je za naše potrebe najprimernejši. Obstajata dve možnosti. To je neposredno zajemanje podatkov iz operativne baze ali pa izdelava skladišča podatkov in prenos obdelanih podatkov. Obe možnosti imata svoje prednosti in slabosti. Izdelava podatkovnega skladišča zahteva dodaten čas in napor za razvijanje (izdelava skladišča in procedur za prenos podatkov) ter dodatno razširitev strojne opreme. Vse to povzroči dodatne stroške izdelave sistema. Vendar tak sistem je dolgoročno zagotovo bolj stabilen in v primeru izredno velikih količin podatkov tudi bolj učinkovit. Istočasno je poskrbljeno tudi za samo arhiviranje podatkov.

Zajemanje podatkov neposredno iz operativne baze je zelo elegantna rešitev. Potrebno je samo izdelati navidezne tabele (view-je), ki omogočijo dostop do podatkov pri generiranju večdimenzionalnih kock. Pomanjkljivosti le-teh se pokažejo v primeru veliki količine podatkov in neustrezne strojne opreme. V tem primeru so lahko SQL stavki navideznih tabel zelo potratni in počasni, tako da se lahko generiranje in osveževanje OLAP kock raztegne na več ur. Izvedli smo analizo in ugotovili, da poslovni partnerji ne uporabljajo tako velikih količin podatkov in bi ob ustrezni izdelavi navideznih tabel, lahko dosegli optimalen rezultat.
Poleg tega pa bi te navidezne tabele predstavljale osnovo za kasnejše izdelavo podatkovnega skladišča, saj bi uporabili povsem enako strukturo.
Na podlagi definicije analiz in poročil smo zbrali dimenzije, ki naj bi jih potrebovali. Osnovne dimenzije, ki se v splošnem uporabljajo so: poslovni partnerji, artikli, organizacijske enote, obdobje, skladišče, vrsta prometa in kontni plan. Za vsako dimenzijo je bilo potrebno določiti tudi različne nivoje, ki uporabniku omogočajo vrtanje v globino. Nivoje smo snovali na tak način, da je prikazovanje podatkov pregledno in da je vrtanje v globino smiselno.
Iz definicije analiz in poročil smo definirali še potrebne OLAP kocke. Pazili smo nato, da pokrijemo vse analize in poročila s čim manjšim številom kock, ker smo se hoteli izogniti večkratnem zajemanju in preračunavanju enakih podatkov. Tako bi prihranili tudi čas osveževanja kock in prostor na disku. Poskusili smo za vsak sklop poročil izdelati samo eno kocko, vendar to ni bilo vedno mogoče. V določenih primerih je bilo nujno podatke deliti in pripraviti dve do tri kocke. OLAP kocke, ki smo jih definirali, so naslednje:
• Fakturiranje (prodaja),
• Komerciala (zaloge),
• Nabava (nabava),
• Kadri (kadri),
• Plače (kadri)
• Terjatve (finančni kontroling),
• Obveznosti (finančni kontroling),
• Računi (finančni kontroling)
Potrebno je bilo določiti način shranjevanja OLAP kock. Možnosti so naslednje: MOLAP, ROLAP ali HOLAP. Prednosti in slabosti vseh treh možnosti smo spoznali že v teoretičnem delu. Ugotovili smo, da je na podlagi dokumentacije izredno težko določiti primerno opcijo.
Najbolje je preizkusiti vse tri možnosti in izbrati optimalno. V tem primeru je potrebno imeti dobre testne podatke. Za naš sistem smo ocenili, da bi ustrezal MOLAP. Določili smo 100% predhodno izračunavanje agregatov, ker uporabnikom zagotavlja najhitrejši odziv, vendar porabi največ časa pri osveževanju kock. Kljub temu smo predvidevali, da bo generiranje in osveževanje dovolj hitro, saj nismo imeli opravka z več milijonov zapisov.
Definirati je bilo potrebno čas osveževanja OLAP kock. Na ustrezno izbiro vplivajo potrebe uporabnikov. Trenutno je večina poročil namenjena operativnemu vodstvu, zato je nujno bolj pogosto osveževanje. Uporabniki so zahtevali dnevno osveževanje kock, zato smo za termin določili tretjo uro zjutraj in ocenili največ do dve uri osveževanja. Tako naj bi bila vsako jutro pripravljena sveža poročila.

Če na kratko povzamem omenjene specifikacije razvoja: 1. Zajemanje podatkov neposredno iz operativne baze podatkov.
2. Izdelati naslednje dimenzije: partner, artikel, organizacijska enota, skladišče, obdobje, vrsta prometa, kontni plan.
3. Izdelati naslednje kocke: Fakturiranje, Komerciala, Nabava, Kadri, Plače, Terjatve, Obveznosti...
4. Dnevno osveževanje kock ob 3h zjutraj.
4.3 Izdelava sistema
Če smo v prejšnjih fazah dobro definirali postopke, v tej fazi ne bi smeli imeli večjih težav.
Gre preprosto za izdelavo sistema v ožjem pomenu besede. Prikazal bom vse ključne faze izdelave, da dobimo občutek, kakšne postopke in znanja taka izdelava zahteva. Prikazal bom tudi, kako izgleda končna rešitev. V tej fazi so bili najbolj angažirani programerji, ki so iz priložene dokumentacije iz prejšnjih faz izdelali sistem. Predhodno smo morali pripraviti razvojno okolje. Pripravili smo tudi testne podatke z enako strukturo in količino podatkov kot jo ima stranka, da smo lahko sproti proučevali obnašanje sistema in že v tej fazi predlagali izboljšave, ki so bile zajete v tekoči verziji ali pa v kasnejši nadgradnji.
4.3.1. Zajemanje podatkov
Izdelava sistema se začne pri podatkih. Če želimo uporabnikom omogočiti pregledovanje zahtevanih analiz in poročil, moremo v prvi fazi zbrati potrebne podatke. V našem primeru so bili vsi podatki shranjeni v operativni bazi podatkov in osnova za zajemanje teh podatkov je bilo poznavanje podatkovnega modela, ki je prikazan na sliki 9.

Slika 9: Del podatkovnega modela transakcijske baze podatkov Vir: Interna dokumentacija projekta.
To je relacijski model, ki je optimiziran za potrebe transakcijskega sistema aplikacij (kadri, finance, plače, fakturiranje, komerciala...), ki jih stranke uporabljajo, vendar ne ustreza večdimenzionalnemu načinu prikazovanja podatkov ter ne dopušča grajenja OLAP kock.
Potrebovali smo zvezdasto strukturo in je zato bilo potrebno podatke prestrukturirati. V primeru skladiščenja podatkov, bi podatke prenesli v skladišče podatkov, kjer bi bili shranjeni v že ustrezni obliki. Ker pa smo definirali, da bomo črpali direktno iz relacijske baze, je bilo potrebno pripraviti navidezne tabele za tvorjenje nekaterih dimenzijskih tabel in tabel dejstev.
4.3.2. Izdelava dimenzij
Preden smo se lotili izdelovanja kock, smo morali izdelati dimenzije, ki smo jih kasneje uporabili za gradnjo le-teh. V fazi načrtovanja smo določili vse dimenzije in njihove nivoje. V nekaterih primerih smo uporabili enake tabele kot jih uporabljajo šifranti transakcijskih aplikacij, za ostale pa smo pripravili dimenzijske tabele iz navideznih tabel.
Izdelovanje dimenzij ni bilo zahtevno opravilo, saj ni zahtevalo veliko dodatnega znanja. Iz vira podatkov smo izbrali dimenzijsko tabelo, iz katere smo zgradili dimenzijo. Nato smo določili potrebne nivoje, ki uporabniku omogočajo sistematično vrtanje v globino. Slika 10 prikazuje primer dimenzije »Artikli«, ki je sestavljena iz dveh nivojev, kar bo uporabnikom omogočila pregledovanje podatkov po skupinah artiklov in nato še po posameznih artiklih v okviru določene skupine.

Slika 10: Primer izdelave dimenzije Artikli Vir: Interna dokumentacija projekta.
Na podoben način smo izdelali tudi ostale dimenzije. Izpostavil bi samo dimenzijo »Organizacijske enote«, ki je t.i. starš-otrok (angl. parent-child) dimenzija. Značilnost le-te je, da nima fiksno določenih nivojev, ampak na podlagi šifre organizacijske enote in šifre njene nadrejene enote orodje samo izdela hierarhijo nivojev dimenzije.
4.3.3. Izdelava tabel dejstev
Za vsako kocko smo pripravili navidezno tabelo, ki zajame in pripravi vse potrebne podatke.
Vključili smo vse vrednosti, ki so bile določene v fazi načrtovanja.
Slika 11 prikazuje primer SQL sintakse za izdelavo navidezne tabele. Vidimo, da je navidezna tabela OLP_FAKTURE skupek več tabel in vsebinsko zajame vse postavke faktur ter njihove vrednosti. Zajeti so tudi vrednosti marže, rabata in razlike v ceni, ki so del komercialnega sistema. Opazimo, da je tabela izredno kompleksna in v primeru velikega števila podatkov, predstavlja ozko grlo pri generiranju in osveževanju kock. V primeru uporabe skladišča podatkov se temu problemu izognemo. Lahko pa enak SQL stavek uporabimo za polnjenje le-tega.

Slika 11: SQL stavek za izdelavo navidezne tabele OLP_FAKTURE
CREATE OR REPLACE VIEW OLP_FAKTURE
(S_OE, DOK_ID, POST_ID, VRSTA_DOKUMENTA, D_DOK, ART_ID, ID_PP, KOLICINA,
VR_OSN_DAV_SIT, SIF_NOS, ORIG_DOKUMENT, ST_DOK, STROSKI, RABAT_DOB, MARZA, RVC) AS
SELECT
a.s_oe, a.dok_id, b.post_id, lpad(to_char(a.vr_anal),2,'0')||lpad(to_char(a.gr_dok),2,'0')||lpad(to_char(a.vd),2,'0'),
a.d_dok, b.art_id, NVL (b.id_pp, '-1'), SUM (NVL (b.kolicina, 0)), SUM (NVL (b.vr_osn_dav_sit, 0)),
nvl(B.SIF_NOS,'-1'), nvl(A.ORIG_DOKUMENT,'Neznani dokument'), A.ST_DOK,
sum(nvl(pd.vrstro,0)+nvl(pd.vrstro1,0)+nvl(pd.vrstro2,0)+nvl(pd.vrstro3,0) ) STROSKI,
sum(nvl(pd.vredr,0)) RABAT_DOB, sum(nvl(pd.vredm,0)) MARZA,
DECODE(ss.vrednotenje,1,sum( decode(nvl(pd.CENA,0),0,0,nvl(b.vr_osn_dav_sit,0) - nvl(pd.CENA,0)*nvl(b.kolicina,0))) ,
sum(decode(nvl(nvl(pd.CENANB,pd.CENAN),0),0,0,nvl(b.vr_osn_dav_sit,0) -
nvl(nvl(pd.CENANB,pd.CENAN),0)*nvl(b.kolicina,0)))) RVC
FROM fk_dokumenti a, fk_postavke_dokumenta b, so_skladisca ss, ks_post_dok pd
WHERE a.dok_id = b.dok_id
AND b.s_skl=ss.s_skl
AND pd.post_id_fk=b.post_id
AND a.vr_anal = 20
AND a.gr_dok = 2
AND a.vd in (1,2,10) -- racun, storno racun
GROUP BY a.s_oe, a.dok_id, b.post_id, lpad(to_char(a.vr_anal),2,'0')||lpad(to_char(a.gr_dok),2,'0')||lpad(to_char(a.vd),2,'0'),
a.d_dok, b.art_id, NVL (b.id_pp, '-1'), nvl(B.SIF_NOS,'-1'), nvl(A.ORIG_DOKUMENT,'Neznani dokument'),
A.ST_DOK, ss.vrednotenje
WITH READ ONLY;
Vir: Interna dokumentacija projekta.
4.3.4. Izdelava kock
Osnove izdelovanja OLAP kock ne zahtevajo veliko dodatnega znanja. Orodje Analysis Manager ima vgrajen čarovnik, ki bistveno poenostavi izdelavo preprostih kock. Ko smo podatke (tabele dejstev) in vse potrebne skupne dimenzije pripravili, smo lahko pričeli z izdelavo kock. Iz vira podatkov smo izbrali ustrezno tabelo dejstev, ki jo orodje obarva z rumeno barvo. To lahko vidimo tudi na sliki 12, in sicer na desni polovici, kjer je prikazana zvezdasta shema. Leva polovica slike pa prikazuje elemente in lastnosti, ki določajo funkcionalnost kocke. Kot vidimo sta prva dva sklopa ravno dimenzije in meritve kot osnovna gradnika kocke.

Slika 12: Primer izdelave OLAP kocke Vir: Interna dokumentacija projekta.
Nadaljevali smo z izbiranjem dimenzij, ki smo jih uporabili za sestavljanje analiz. Paziti smo morali, da so povezave med osrednjo tabelo in dimenzijskimi tabelami, ki jih orodje samo določi, pravilne. V nasprotnem primeru smo jih sami popravili. Za določene kocke smo dodatno določili še interne dimenzije, ki se specifično uporabljajo samo za le-te. Iz tabele dejstev smo določili polja za meritve, jih ustrezno poimenovali in izbrali ali naj vrednosti šteje ali sešteva. Dodatno smo iz le-teh pripravili izračunane meritve, ki so npr. rezultat deljenja dveh osnovnih meritev in podobno. Nato smo sprožili proces generiranja, ki zajame osnovne podatke, izračuna agregate in jih shrani v ustrezni obliki. Pred tem pa smo določili še način shranjevanja podatkov (MOLAP, ROLAP ali HOLAP) in 100% predhodno izračunavanje agregatov, kot je zahteval načrt izdelave. Po uspešno končanem generiranju, je bila kocka pripravljena za osnovno pregledovanje.
Uporabljeno orodje OLAP podpira še druge funkcionalnosti, s pomočjo katerih smo izdelali kompleksnejše kocke za zahtevne analize, vendar smo za to potrebovali veliko dodatnega izobraževanje in neizogibno poznavanje jezika MDX. Najeli smo tudi konzultanta, ki nam je pomagal pri nekaterih zapletenih opravilih.

4.3.5. Izdelava poročil v odjemalcu
Knosys ProClarity 4 je zmogljivo večdimenzionalno orodje za izvajanje poslovnih analiz.
Izdelano in optimizirano je za pregledovanje Microsoft OLAP kock, saj je podjetje Knosys strateški partner podjetja Microsoft. Omogoča direktno povezavo z OLAP bazo, v kateri so shranjene večdimenzionalne kocke. Vsebuje veliko vgrajenih osnovnih funkcij, ki uporabniku omogoča hitro, intuitivno in učinkovito pripravljanje različnih preglednic, grafikonov in dekompozicijskih dreves, ki so nepogrešljiva sredstva pri izvajanju poslovnih analiz.
Priprava osnovnih analiz je ob poznavanju vsebine kock izredno preprosta. Najprej se odpre želeno kocko in se v orodni vrstici klikne na ikono »Dimensions«. Pojavi se okence, ki vsebuje vse dimenzije izbrane kocke in omogoča pregledovanje njihove vsebine. Za vsako poročilo se najprej definira strukturo preglednice, saj predstavlja osnovo za kasnejše izdelovanje grafikonov. Izbrati je potrebno, katere dimenzije bodo prikazane v stolpcih in katere v vrsticah. Lahko se tudi določi kakšna naj bo hierarhija dimenzij oz. podatkov ter omejitve, če se želi osredotočiti samo na določeno podmnožico podatkov.
Slika 13: Izdelovanje pogledov s Knosys Proclatity 4 Vir: Interna dokumentacija projekta.
Prednost preglednice našega odjemalca je v tem, da omogoča direktno vrtanje po podatkih in izdelovanje različnih grafikonov za učinkovitejše interpretiranje podatkov. S pomočjo čarovnika pa se lahko izdela dekompozicijsko drevo, ki ima izredno visoko analitično vrednost. Njegova prednost je v izredno nazornem in sistematičnem prikazovanju absolutnih in relativnih podatkov ter v učinkovitem razvejanju po vseh dimenzijah. Vse to pa poteka izredno preprosto in hitro, tako da uporabnik ne izgublja nepotrebnega napora, ampak je vsa njegova pozornost usmerjena v pregledovanje stanja poslovanja in odkrivanja področij na katerih prihaja do problemov.

Za zahtevne analize orodje omogoča uporabo jezika (funkcij) MDX, ki je običajno za uporabnika prezahteven. Naš cilj je bil uporabniku omogočiti najpreprostejše izvajanje analiz, zato smo v naprej pripravili tako preproste kot zahtevne analize. Kljub temu lahko pripravljena poročila interaktivno spreminja z vrtanjem v globino po želenih podatkih. Končni izgled naše rešitve s pripravljenimi analizami (na levi strani odjemalca) prikazuje slika 14.
Slika 14: Pregled pripravljenih poročil v odjemalcu Knosys Proclarity 4 Vir: Interna dokumentacija projekta.
4.3.6. Testiranje ustreznosti za distribucijo
Ko so programerji izdelali produkt in se prepričali, da ustreza zastavljenemu načrtu, smo pripravi postopek namestitve in dali izdelek v testiranje ustreznosti za distribucijo. Proces testiranja je potekal v več stopnjah. Oseba, ki je zadolžena za namestitve programov pri strankah je pripravila primerno testno okolje in poskusila izvesti celotno namestitev. Šele ko je bila namestitev uspešno izvedena, je sledilo testiranje pravilnega delovanja aplikacije.
Preveriti je bilo potrebno vsebino in točnost podatkov. Narejen je bil zapisnik, ki je vseboval navodila za odpravljanje ugotovljenih napak. Potrebno je bilo vse napake odpraviti in ponoviti postopek testiranja. Šele ko je izdelek uspešno prestal vse faze testiranja, se je pripravljene datoteke preneslo v mapo (imenik) za distribucijo.

4.4 Implementacija
Faza implementacije je z vidika uporabnikov najpomembnejša faza, ker je to njihov prvi stik s sistemom. Če je rezultat pod njihovimi pričakovanji, se lahko zgodi, da zavzamejo negativen odnos do sistema in s tem ogrozijo uspeh projekta. Zato je pred uvajanjem uporabnikov potrebno implementiran sistem ponovno testirati »v živo«, da zagotovimo kakovost in pripraviti ustrezno dokumentacijo za boljše uvajanje uporabnikov.
4.4.1 Priprava dokumentacije sistema
Za vsak izdelan produkt je priporočljivo pripraviti dokumentacijo. V našem primeru smo izdelali tehnični in uporabniški priročnik. Tehnični priročnik smo namenili administratorju sistema, kjer so opisani vsi postopki za inštalacijo in vzdrževanje sistema. Izdelali smo ga iz naslednjih razlogov:
1. je del dokumentacije projekta,
2. v primeru zamenjave ljudi v naši projekti skupini, je uvajanje in izobraževanje svojih ljudi enostavnejše in hitrejše in
3. naročnik projekta bolj verjame v profesionalnost sistema.
Ravno tako je pomemben tudi uporabniški priročnik, kjer uporabnik dobi vsa navodila za uporabo sistema. Sestavili smo ga na tak način, da so predstavljene glavne funkcionalnosti ter način uporabe odjemalca. Sledi vsebinska razlaga vseh poročil, ki so združena po sklopih. Na tak način si lahko uporabnik sam pogleda in seznani z aplikacijo. Pazili smo, da je priročnik zanimiv, pregleden in uporaben. Opis vsakega poročila je moral biti jedrnat in dovolj razumljiv. Vključiti je bilo potrebno navodila vseh možnih postopkov uporabe. Znano je, če obstaja možnost, da uporabnik naredi nekaj narobe, običajno to tudi stori. Če so take stvari v priročniku opisane in dovolj razumljivo obdelane, za morebitne napake uporabnik odgovarja sam. V nasprotnem primeru je krivda na naši strani, ker smo uporabnika premalo poučili.
4.4.2 Testiranje nameščenega sistema
Po namestitvi sistema v smo izvedli podrobno testiranje v živo. Ponovno smo preverili tehnično in vsebinsko ustreznost, saj velikokrat se zgodi, da se nekatere napake oz. pomanjkljivosti pojavijo šele pri stranki. Nismo si dovolili, da bi med uvajanjem uporabniki zaznali kakšne koli tehnične napake, ki bi negativno vplivale na njihov odnos do sistema.
Rezultati so bili v skladu s pričakovanji, vendar opazili smo nekatere pomanjkljivosti.
Ugotovili smo, da je generiranje nekaterih kock precej počasno. Osveževanje dimenzij je potekalo relativno hitro, ker niso vsebovale velike količine podatkov. Izjema je bila dimenzija »Artikli«, ki je vsebovala več kot sedemdeset tisoč zapisov, kljub temu pa je bila pripravljena v primernem času. Največje težave smo imeli pri generiranju kocke s komercialnimi podatki.

Ozko grlo je bila navidezna tabela v operativni bazi, ki je bila zelo kompleksna in vsebovala največ podatkov. Vsebovala je celoten promet vseh artiklov, zato je ob generiranju in osveževanju porabila relativno veliko časa, da je vrnila potrebne podatke. Orodje OLAP pa je le-te v zelo kratkem času obdelal in izračunal agregate. Kljub temu je omenjena kocka trenutno prinašala zadovoljive rezultate, ostali deli sistema pa so izredno dobro delovali.
Vendar smo na podlagi enake dinamike rasti operativnih podatkov predvidevali, da se bo čas osveževanja dimenzij in kock postopoma podaljševal, zato smo kaj hitro začeli s pripravami novih predlogov za optimizacijo in nadgradnjo sistema ter razširitev strojne opreme.
Sistem je uspešno opravil testiranje in naredili smo zapisnik, kjer so bili vključeni vsi predlogi za novo verzijo. Nujno je bilo potrebno razmišljati o skladiščenju podatkov oz. o izdelavi področnih skladišč. V prvi fazi je bil narejen predlog za izdelavo področnega skladišča za komercialni del, ki je predstavljal šibko točko sistema, za podjetje pa zelo pomembno področje. Za ostale sklope še ni bilo potrebno razmišljati o optimizaciji, ker so zagotavljali zelo dobre odzive.
4.4.3 Uvajanje uporabnikov
Zbrali smo vse uporabnike skupaj in izvedli kratko predstavitev sistema, kjer smo predstavili delovanje sistema na podlagi nekaterih primerov in podali osnove uporabe. Vsem smo razdelili uporabniške priročnike, da so imeli možnost pogledati in vsebinsko spoznati del, ki jih je konkretno zanimal. Naš namen je bil ustvariti prijazen (prvi) stik s sistemom in v uporabnikih vzbuditi pozitiven odnos, ki bi omogočil nadaljnjo uspešno uporabo in razvijanje sistema OLAP.
Sledila je faza praktičnega uvajanja. Večina uporabnikov je bilo iz operativnega vodstva, ki so večinoma potrebovali poročila iz enega do dveh področij. Zato smo uvajanje nadaljevali na podlagi individualnega dela. Z vsakim uporabnikom smo skupaj ponovno osvežili osnove uporabe sistema in podrobno predstavili njegovo področje ob pomoči priročnika. Istočasno smo zbirali predloge izboljšave za naslednjo nadgradnjo.
4.5. Vzdrževanje sistema
Podjetje je s poslovnim partnerjem že imelo podpisano pogodbo o vzdrževanju transakcijskega informacijskega sistema (oz. aplikacij). V pogodbo so dodali še nekaj točk, ki so se nanašale na vzdrževanje sistema OLAP. Zavezali so se, da bodo dolgoročno skrbeli za pravilno delovanje sistema in ga razvijali glede na njihove potrebe, trendov v razvoju in tehnologiji.
Izdelali smo sistem, ki je podpiral osnovne funkcionalnosti. Kot takega smo pri naročniku namestili in ugotovili tehnične slabosti. Dal je rezultate, ki smo jih pričakovali, vendar je sistem potrebno neprestano razvijati. V fazi uvajanja smo zbrali in pripravili že prve predloge, na podlagi katerih se bo skupaj z uporabniki gradil razvoj. Cilj je izdelati celovit, stabilen in učinkovit sistem za podporo odločanju. Nujni pogoj za doseganje zastavljenega cilja je ohranjanje močnega partnerskega odnosa.

5. PREDNOSTI, SLABOSTI IN TEŽAVE PRI IZDELAVI OLAP SISTEMA
Projekt izdelave sistema OLAP je potekal v skladu z načrtom. Izdelan sistem je bil uspešno implementiran in uporabniki so ga po uvajanju tudi sprejeli. Seveda sistem ni bil brezhiben in je imel svoje pomanjkljivosti. Med in po fazi končnega testiranja in uvajanja smo opazovali, kako se obnaša in kakšne težave imajo uporabniki. Ugotovili smo prednosti in slabosti sistema, ki jih bom v nadaljevanju predstavil.
5.1. Prednosti
V teoretičen delu smo spoznali nekatere prednosti, ki jih SPO prinaša. Ugotovili smo, da je mogoče zaznati veliko več nemerljivih kot merljivih koristi, zato je tudi težko izvajati analizo stroškov in koristi, še posebej za krajše obdobje. Tudi v našem primeru smo spoznali, da na kratek rok ni takojšnjih merljivih koristi. Opazili smo pa veliko nemerljivih, ki lahko na daljše odboje pozitivno vplivajo na uspešnost poslovanja oz. dobiček.
Uporabniki so bili najbolj navdušeni nad dejstvom, kako preprosto in hitro lahko pridobijo informacije. Občutili so očiten prihranek časa, saj ni bilo več potrebno naročati in čakati razne izpise od drugih oddelkov. Poleg tega so imela poročila, ki so si jih sami pripravili, večjo informacijsko vrednost, saj so vsebovala samo tiste podatke, ki so takrat potrebovali in so bili predstavljeni v obliki, ki so si sami želeli. Odgovore so dobili takoj in jim ni bilo potrebno prekiniti miselnega procesa. Hkrati pa so lahko samostojno raziskovali po podatkih in niso potrebovali papirnatih poročil. Lažje so prišli do bistva problema. Vse to je prednost interaktivnega pregledovanja, ki je naš sistem prinesel. Te spremembe niso zanemarljive, ampak so zelo pomembne, saj povečajo produktivnost uporabnikov in nenazadnje omogočajo bolj učinkovit proces odločanja, ki nedvomno na dolgi rok prinese veliko koristi.
Zelo pomembna prednost je bolj transparentno poslovanje in hitrejše ugotavljanje napak (nepravilnosti). Iz množice podatkov je izredno težko najti napake, če operiramo s posameznimi podatki. Ko pa se vse podatke zbere, sešteje in prikaže v agregatih, tedaj lahko lažje opazimo, ali so podatki točni ali ne. Uporabniki so hitro ugotovili, kje se podatki ne ujemajo in zakaj so agregati nepravilni. Včasih je bil vzrok napaka programerja, velikokrat pa so bili operativni podatki nepravilno vneseni in je prihajalo do nekonsistentnosti. Na tak način so hitro ugotovili, zakaj do tega prihaja in seveda podatke popravili. Poleg tega so dnevno spremljali rezultate prejšnjih dni in sproti ugotavljali, kako se je dnevno poslovanje odvijalo.

V primeru odstopanj od planiranega so lahko takoj ukrepali. To velja predvsem za operativni nivo.
Med najbolj pomembnimi prednosti izgradnje sistema OLAP, ki smo jih opazili, je boljše poznavanje realne situacije v podjetju in »kristaliziranje« (informacijskih) potreb s strani vodstva. Odločitev za postavitev takega sistema običajno prihaja od vodstva. Pričakuje se, da dobro ve, katere informacije potrebuje za učinkovito odločanje in poslovanje. Ravno tako mora vedeti tudi za taktični in operativni nivo. Zato mora jasno spoznati in definirati katere informacije so pomembne, da lahko izvajalec izdela sistem, ki bo ustrezal njihovemu načinu poslovanja. V našem primeru vodstvo sprva ni podrobno vedelo, katere informacije si želi iz strani sistema OLAP. Skozi proces načrtovanja, izdelave, implementacije in uporabe sistema, je vodstvo intenzivno delalo tudi z nižjim managementom. Stekla je komunikacija, ki je omogočila, da so na dan prišle potrebe in težave vseh odločevalcev v podjetju. Sproti so se urejale tudi stvari, ki sprva za vodstvo niso bile pomembne, vendar so odločilno vplivale na produktivnost.
Omenili smo, da sistem za podporo odločanju izboljša medosebno komunikacijo. V našem primeru težko govorimo o tem, da so se zgodili vidni pozitivni premiki. Lahko trdimo le to, da smo opazili močno povezanost med vsemi uporabniki (vključno z vodstvom).
Komunikacija med uvajanjem je bila izredno pozitivna in sodelovanje med uporabniki je bilo na visokem nivoju. Vendar opisano stanje težko neposredno povezujemo z uvedbo sistema OLAP, saj je odvisno od več dejavnikov. Na sploh pa se medosebni odnosi v podjetju ne morejo čez noč spremeniti, ampak to je proces, ki potrebuje daljše obdobje.
5.2. Slabosti in težave
Največjo slabost sistema OLAP so za vodstvo podjetja predstavljali stroški investicije, ki so bili potrebni za izdelavo in implementacijo. Kljub relativno ugodni ceni, ki jim je bila postavljena, je bila še vedno previsoka in najbrž nikoli ne bi bila primerna, ker bi vedno pričakovalo nižjo ceno. Po drugi strani pa je za investirana sredstva zahtevalo čim več, brez dodatnih stroškov in podaljševanja rokov izdelave. Dobili smo občutek, da je vsaka realna cena takega sistema za veliko podjetij previsoka, pa čeprav jim lahko tak sistem prinese veliko več kot pa znašajo stroški investicije.
Največ težav smo imeli z zajemanjem podatkov in generiranjem kock. Ozko grlo je bila navidezna tabela v operativni bazi, ki je potrebovala preveliko časa za vračanje podatkov. Z dodatno nadgradnjo strojne opreme (razširitev diska in zmogljivejši procesor), bi zadevo zelo elegantno rešili, vendar podjetje ni bilo zainteresirano za dodatno investiranje v strojno opremo, kljub relativno majhnim stroškom. To je povzročilo celo serijo težav, ki smo jih morali sproti reševati z začasnimi rešitvami. Kljub omenjenim težavam je bil koncept zelo dobro zasnovan, saj nam je omogočil hitro vzpostavitev sistema in osnovo za razvijanje bolj stabilnega sistema.

Delne težave smo imeli tudi z uporabniki v fazi uvajanja. Velikokrat se zgodi, da vsi uporabniki niso navdušeni nad spremembami, ki jih sistem prinaša. Običajno se taki ljudje bojijo sprememb in zato nastaja napeto vzdušje. To se je zgodilo tudi v našem primeru, saj so se nekateri uporabniki že od prvega dne zavzeli negativno stališče do sistema. Iskali so vse možne napake in se niso osredotočili na to, kaj jim lahko koristnega prinese. Z nekonstruktivnimi pripombami so kvarile vzdušje dela. Omenjene težave pri uvajanju so se pojavile tudi zaradi tega, ker so bili uporabniki v tem času prezaposleni zaradi vpeljevanja tudi drugih novosti (sprememb) in zaključevanja obračunskega obdobja. Uporabniki niso imeli možnosti, da bi si vzeli dovolj časa in se primerno posvetili uvajanju, zato je delo včasih potekalo bolj napeto. Vodstvo pa je pritiskalo, da sistem čim hitreje zaživi, kljub neugodni situaciji. Kljub vsemu je bila tudi faza uvajanja uspešno izvedena in večina uporabnikov je bila zadovoljna z nastalimi rezultati.
6. Sklep
V podjetju se vsak dan odvija proces odločanja na vseh treh vodstvenih nivojih (najvišjem, srednjem in operativnem). Hitre in točne informacije so pogoj, da je proces učinkovit in da podjetje odpravlja svoje težave ter izkoristi poslovne priložnosti, ki se na konkurenčnem trgu ponujajo. Dober sistem za podporo odločanju je lahko eden izmed ključnih faktorjev uspešnosti podjetja, saj prinaša veliko pozitivnih sprememb: povečanje števila obdelanih alternativ, boljše razumevanje posla, boljše odločanje, bolj učinkovito skupinsko delo, prihranek časa... Ugotovili smo, da je večina teh sprememb oz. koristi nemerljivih, ki na dolgi rok zagotovo vplivajo na povečanje konkurenčnosti in profitabilnosti.
Skladišče podatkov je vsebinsko usmerjena, integrirana in dolgotrajna zbirka zgodovinskih podatkov. Osnove izgradnje skladišča podatkov so izhajale iz potreb izboljšanja tehnologije baz podatkov in vodile do povečanja zanimanja za analiziranje in uporabo zbranih historičnih podatkov. Skupaj s tehnologijo za sprotno analitično obdelavo podatkov (OLAP), ki omogoča hitro, interaktivno, sistematično in intuitivno pregledovanje podatkov, sta pripomogla h povečanju vrednosti in učinkovitosti SPO. Orodja OLAP so v zadnjih nekaj letih postala zelo zmogljiva, vendar se za zahtevne analize vse bolj uporablja tudi tehnologija umetne inteligence in orodja za rudarjenje po podatkih (angl. data mining). Od začetka 21. stoletja pa je spletno okolje postalo zelo pomembno za razvoj SPO kot platforma za dostavljanje orodij ali informacij. Uporaba spletne tehnologije je zmanjšala tehnološke pregrade in omogočila managerjem in geografsko razpršenim uporabnikom lažje in cenejše pridobivanje informacij.
V naslednjih desetih letih se predvideva veliko sprememb na področju sistemov za podporo odločanju, ki bodo posledica sprememb v organizaciji podjetij, uporabnikih in tehnologiji.
Opuščanje hierarhične organizacijske strukture, povečevanje števila spretnih uporabnikov, nadaljnji razvoj spletne tehnologije in mobilnih telekomunikacij bo omogočil nove funkcionalnosti SPO, ki bodo še dodatno izboljšale proces odločanja. Nekatera podjetja bodo posegala tudi po tehnologiji spletnih portalov, ki naj bi reševale problem eksplozije najrazličnejših podatkov in podatkovnih virov. Razvoj SPO bo po drugi strani povzročil spremembe v razmišljanju in načinu dela ter podprl razvoj navideznih (virtualnih) podjetij in skupin.

Sistem OLAP omogoča izvajanje dinamičnih večdimenzionalnih analiz zgoščenih podatkov, ki je bližje poslovnemu razmišljanju in nudi boljšo pomoč pri iskanju informacij za odločanje v primerjavi s transakcijskim sistemom. Praviloma temelji na arhitekturi odjemalec/strežnik.
Izdelan je lahko na podlagi več konceptov. Od celovitega, ki zahteva izdelavo skladišča podatkov, kock in pripravo odjemalca, pa do delnih rešitev, ki omogočajo hitro in cenejšo izgradnjo sistema. Ne glede na izbrani koncept je za sistem OLAP bistveno, da ima vseskozi kratek odzivni čas, ne glede na število uporabnikov, velikost in zapletenost podatkovne baze.
OLAP pomaga uporabniku pri sintezi podatkov preko primerjalnega pregledovanja, različnih analiz podatkov iz preteklega obdobja in različnih "kaj-če" analiz. Pri tem nudi uporabniku poljuben pogled na podatke.
Pokazali smo, da je z ustrezno izbiro orodij OLAP in koncepta izdelave mogoče izdelati učinkoviti sistem OLAP, ki je cenovno dostopen tudi manjšim podjetjem. V našem primeru smo na podlagi realnega projekta prikazali izgradnjo sistema, ki je temeljil na delni rešitvi.
Izognili smo se izgradnji skladišča podatkov in pripravili kocke, ki so podatke črpali neposredno iz operativne baze podatkov. S pomočjo izbranega odjemalca smo uporabniku omogočili intuitivno, preprosto in hitro pregledovanje ter primerjanje podatkov tako v tabelarični kot grafični obliki. V fazi implementacije, uvajanja in uporabljanja sistema smo opazili zelo pomembne pozitivne spremembe, ki smo jih tudi v teoretičnem delu našteli.
Očiten je bil prihranek časa pri iskanju informacij, izboljšanje opravljanja določenih opravil, lažje spremljanje tekočega poslovanja in ugotavljanje težav. Po drugi strani je sistem OLAP povzročil, da so na dan prihajale določene interne nepravilnosti, ki so bile posledica starega načina dela. Nujna je bila konstruktivna komunikacija med vsemi vodstvenimi nivoji, da so lahko te težave uspešno odpravili.
Izdelan sistem je mogoče (priporočljivo) še dodatno razviti in vključiti tudi druge tehnologije, ki lahko povečujejo uporabnost in učinkovitost sistema. Kot prvo bi bilo primerno vpeljati skladiščenje podatkov. Smiselno bi bilo narediti analizo o uporabi tehnologije za rudarjenje po podatkih (»data minig«), ki lahko iz množice podatkov najde vzorce in modele ter iz njih povzame pravila. Do podatkov že pripravljenih kock je mogoče dostopati tudi s pomočjo brskalnika, če se predhodno pripravi spletno aplikacijo. Na tak način lahko izkoristimo prednosti, ki jih spletna tehnologija in Internet ponujata.

7. Literatura
1. Amo William C.: Microsoft SQL Server OLAP developer's guide. Foster City: IDG Books Worldwide, 2000. 357 str
2. Berge Susan: SQL Server and ADO programming complete. San Francisco: Sybex, 2001. 994 str.
3. Bidgoli Hossein: Modern Information Systems for Managers. Kalifornija: Academic press, 1997. 438 str.
4. Carlsson Crister, Turban Efraim: Introduction – DSS: directions for the next decade.
Decision support systems and Electronic commerce, North-Holland, 33 (2002), str.
5. Freeze Wayne S.: Unlocking OLAP with Microsoft SQL Server and Excel 2000.
Foster City: IDG Books Worldwide, 2000. 473 str.
6. Grad Janez, Jaklič Jurij: Baze podatkov. Ljubljana: Ekonomska fakulteta, 1996. 254 str.
7. Gradišar Miro, Resinovič Gorotan: Informatika v poslovnem okolju. Ljubljana: Ekonomska fakulteta, 2001. 508 str.
8. Jaklič Jurij: Upravljanje in uporaba podatkovnih virov. Ljubljana: Ekonomska fakulteta, 1999. 154 str.
9. Jarke Matthias: Foundamentals of Data Warehouses. Verlag: Springer, 2000. 195 str.
10. Jeras Iztok: DIS - Direktorski informacijski sistem. Zbornik posvetovanja Dnevi slovenske informatike, Portorož, 9.-12.4.1997. Ljubljana: Slovensko društvo Informatika, 1997, str. 351-359.
11. Kimball Ralph: The Data Warehouse Toolit. New York: J. Wiley & Sons, 1996. 374 str.
12. Koletnik Franc, Kovač Jure, Rozman Rudi: Managment. Ljubljana: Gospodarski vestnik, 1993. 312 str.
13. Kovačič Andrej: Informatizacija poslovanja. Ljubljana: Ekonomska fakulteta, 1998.
214 str.
14. Nemati Hamid R. et al: Knowledge warehouse: an architectural integration of klowledge mangement, decision support, artificial intelligence and data warehousing.
Decision support systems and Electronic commerce, North-Holland, 33 (2002), str.
15. Peterson Timothy, Pinkelman James: Microsoft OLAP unleshead. Second edition.
Sams Publishing, ZDA, 2000. 948 str.

16. Pevec Anton: Orodja za sprotno analitično obdelavo podatkov – OLAP. Ljubljana: Ekonomska fakulteta, 2001. 32 str.
17. Shally Gary B., Cashman Thomas J., Rosenblatt Harry J.: Systems analysis and design. Third Edition. Cambridge: Course Technology, 1998.
18. Shim J.P. et al: Past, present, and future of decision support technology. Decision support systems and Electronic commerce, North-Holland, 33 (2002), junij 2002, str.
19. Sturm Jake: Data Warehousing with Microsoft SQL Server 7.0 - Tehnical Reference.
Washington: Microsoft Press, 2000. 430 str.
20. Thomsen Erik: Olap solutions. New York: J. Wiley & Sons, 1997. 576 str.
21. Wainright Martin E.: Managing information technology. Third edition. New Jersey: Prentice Hall, 1999. 716 str.
8. Viri
1. Alta plana – Online analitical processing.
[URL: http://altaplana.com/olap.documentation.html], 7.8.2002.
2. Berce Janez: OLAP delavnica. Seminarsko gradivo. Ljubljana: Berce Janez s.p., 2000. 108 str.
3. Interna dokumentacija projekta.
4. Krsnik Jurij: Sprotno analitično procesiranje – OLAP.
[URL: http://www.bfro.uni-lj.si/zoo/org/centre/slov/govedo/objave/olap/main.htm], 4.12.2001.
5. Matjaž Šircelj: OLAP - Kratka predstavitev in nekaj odgovorov. Microsoft info, Glasilo podjetja Microsoft, Letnik 8, Številka 1, Maj 2002, str.27.
6. Pende Nigel, Richard, Creeth: The OLAP Report: Marekt and product analyses.
[URL: http://www.olapreport.com/Analyses.htm], 7.8.2002.
7. Pendse Nigel: Company Results, Busines Inteligence Ltd.
[URL: http://www.olapreport.com/results.htm], 10.7.2002.
8. Pendse Nigel: Market Share Analysis, Busines Inteligence Ltd.
[URL: http://www.olapreport.com/Market.htm], 20.8.2002.
9. Pendse Nigel: Understanding, Selecting and Implementing OLAP. Seminarsko gradivo.
Ljubljana: Src.si sistemske integracije d.o.o., 2000.
10. ProClarity Web-Enables Enterprise Analytics With the Release of ProClarity Analytic
Platform 4.0 Product Family.
[URL: http://www.proclarity.com/news/2001pressreleases/pcap4.html], 11.6.2001 11. Skupina Merrill Lynch: Enterprise Information Portals. Poročilo, november 1998.

9. SLOVARČEK SLOVENSKIH PREVODOV TUJIH IZRAZOV
Ad hoc query - poizvedba, ki ni vnaprej predvidena Application - programska rešitev
Customer Relationship Management (CRM) - upravljanje odnosov s strankami Client - odjemalec Database - baza podatkov
Database Management System (DBMS) - sistem za upravljanje baze podatkov Data Mart - področno skladišče podatkov Data Mining - rudarjenje po podatkih Data Warehouse - podatkovno skladišče
Decission Support System - sistem za podporo odločanja
Enterprise resources planning (ERP) - informacijski sistem za obvladovanje poslovnih resursov Executive Information System (EIS) - direktorski informacijski sistem HyperText Markup Language (HTML) - jezik za hipertekstovne dokumente (Internet) Hypertext Transfer Protocol (HTTP) - standardni protokol za izmenjavo spletnih dokumentov
OLAP (On-Line Analytical Processing) - sprotna analitična obdelava podatkov Server - strežnik
SQL (Structured Query Language) - nepostopkovni programski jezik za delo z relacijskimi modeli baze podatkov
Thin client devices - tanki odjemaleci
Wireless Aplication Protocol (WAP) - protokol za standardizacijo dostopa z brezžičnimi napravami Wireless Markup Language (WML) - programski jezik za mobilne strani, ki jih lahko gledamo preko mobilnih telefonov, dlančnikov in simulatorjev, ki se nahajajo na medmrežju.

